"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è CoolPrompt —Å GPT-5 –º–æ–¥–µ–ª—è–º–∏
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º GPT-5
"""
import os
import sys
import logging
from io import StringIO
from coolprompt.assistant import PromptTuner
from langchain_openai import ChatOpenAI

# –ü–æ–¥–∞–≤–ª—è–µ–º NLTK –ª–æ–≥–∏ (–ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º stderr –¥–ª—è nltk.download)
logging.getLogger('nltk').setLevel(logging.CRITICAL)

# –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ NLTK download
class SuppressNLTKDownload:
    def __enter__(self):
        self._original_stderr = sys.stderr
        sys.stderr = StringIO()
        return self
    
    def __exit__(self, *args):
        sys.stderr = self._original_stderr

# –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
import nltk
with SuppressNLTKDownload():
    try:
        nltk.download('wordnet', quiet=True)
        nltk.download('punkt_tab', quiet=True)
        nltk.download('omw-1.4', quiet=True)
    except:
        pass  # –£–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã

# API –∫–ª—é—á OpenAI
API_KEY = "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"

os.environ["OPENAI_API_KEY"] = API_KEY

def test_basic_prompt_optimization():
    """–¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞"""
    print("=" * 70)
    print("–¢–ï–°–¢ 1: –ë–ê–ó–û–í–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–†–û–ú–ü–¢–ê –° GPT-5")
    print("=" * 70)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å GPT-5
        llm = ChatOpenAI(
            model="gpt-5-chat-latest",
            temperature=0.7,
            api_key=API_KEY
        )
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PromptTuner
        prompt_tuner = PromptTuner(target_model=llm)
        
        # –ó–∞–¥–∞—á–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        task = "–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ä–∞—Å—Å–∫–∞–∑ –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—à–µ–ª –±–∞–≥ –≤ —Å–≤–æ–µ–º –∫–æ–¥–µ"
        
        print(f"\nüìù –ò—Å—Ö–æ–¥–Ω–∞—è –∑–∞–¥–∞—á–∞: {task}")
        print("\nüîÑ –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–∞...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
        prompt_tuner.run(task)
        
        print("\n‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\n" + "=" * 70)
        print("–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢:")
        print("=" * 70)
        print(prompt_tuner.final_prompt)
        print("=" * 70)
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        import traceback
        traceback.print_exc()
        return False

def test_custom_task_optimization():
    """–¢–µ—Å—Ç 2: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏"""
    print("\n" + "=" * 70)
    print("–¢–ï–°–¢ 2: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–õ–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò –ö–û–î–ê")
    print("=" * 70)
    
    try:
        llm = ChatOpenAI(
            model="gpt-5",
            temperature=0.3,  # –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–¥–∞
            api_key=API_KEY
        )
        
        prompt_tuner = PromptTuner(target_model=llm)
        
        task = "Create a Python function to check if a number is prime"
        
        print(f"\nüìù –ó–∞–¥–∞—á–∞: {task}")
        print("\nüîÑ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞...")
        
        prompt_tuner.run(task)
        
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")
        print("\n" + "=" * 70)
        print("–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢ –î–õ–Ø –ö–û–î–ê:")
        print("=" * 70)
        print(prompt_tuner.final_prompt)
        print("=" * 70)
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_with_gpt5_mini():
    """–¢–µ—Å—Ç 3: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPT-5-mini –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    print("\n" + "=" * 70)
    print("–¢–ï–°–¢ 3: –ë–´–°–¢–†–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –° GPT-5-MINI")
    print("=" * 70)
    
    try:
        llm = ChatOpenAI(
            model="gpt-5-mini",
            temperature=0.5,
            api_key=API_KEY
        )
        
        prompt_tuner = PromptTuner(target_model=llm)
        
        task = "Explain machine learning to a 10-year-old"
        
        print(f"\nüìù –ó–∞–¥–∞—á–∞: {task}")
        print("\nüîÑ –ë—ã—Å—Ç—Ä–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å mini-–º–æ–¥–µ–ª—å—é...")
        
        prompt_tuner.run(task)
        
        print("\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ!")
        print("\n" + "=" * 70)
        print("–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢ (GPT-5-MINI):")
        print("=" * 70)
        print(prompt_tuner.final_prompt)
        print("=" * 70)
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_with_evaluation():
    """–¢–µ—Å—Ç 4: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –æ—Ü–µ–Ω–∫–æ–π –∫–∞—á–µ—Å—Ç–≤–∞"""
    print("\n" + "=" * 70)
    print("–¢–ï–°–¢ 4: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –° –û–¶–ï–ù–ö–û–ô –ö–ê–ß–ï–°–¢–í–ê")
    print("=" * 70)
    
    try:
        llm = ChatOpenAI(
            model="gpt-5-chat-latest",
            temperature=0.7,
            api_key=API_KEY
        )
        
        # PromptTuner —Å –æ—Ü–µ–Ω–∫–æ–π
        prompt_tuner = PromptTuner(target_model=llm)
        
        task = "Write a professional email to decline a job offer politely"
        
        print(f"\nüìù –ó–∞–¥–∞—á–∞: {task}")
        print("\nüîÑ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –æ—Ü–µ–Ω–∫–æ–π –∫–∞—á–µ—Å—Ç–≤–∞...")
        
        prompt_tuner.run(task)
        
        print("\n‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –æ—Ü–µ–Ω–∫–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\n" + "=" * 70)
        print("–õ–£–ß–®–ò–ô –ü–†–û–ú–ü–¢:")
        print("=" * 70)
        print(prompt_tuner.final_prompt)
        print("=" * 70)
        
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
        if hasattr(prompt_tuner, 'metrics'):
            print("\nüìä –ú–ï–¢–†–ò–ö–ò –û–¶–ï–ù–ö–ò:")
            print(prompt_tuner.metrics)
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_compare_models():
    """–¢–µ—Å—Ç 5: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π GPT-5"""
    print("\n" + "=" * 70)
    print("–¢–ï–°–¢ 5: –°–†–ê–í–ù–ï–ù–ò–ï GPT-5 –ú–û–î–ï–õ–ï–ô")
    print("=" * 70)
    
    models = [
        "gpt-5-mini",
        "gpt-5",
        "gpt-5-chat-latest"
    ]
    
    task = "Summarize the benefits of exercise in 3 sentences"
    
    results = {}
    
    for model_name in models:
        try:
            print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏: {model_name}")
            
            llm = ChatOpenAI(
                model=model_name,
                temperature=0.5,
                api_key=API_KEY
            )
            
            prompt_tuner = PromptTuner(target_model=llm)
            prompt_tuner.run(task)
            
            results[model_name] = prompt_tuner.final_prompt
            print(f"‚úÖ {model_name} - –≥–æ—Ç–æ–≤–æ")
            
        except Exception as e:
            print(f"‚ùå {model_name} - –æ—à–∏–±–∫–∞: {e}")
            results[model_name] = None
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 70)
    print("–°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print("=" * 70)
    
    for model_name, prompt in results.items():
        print(f"\nü§ñ –ú–æ–¥–µ–ª—å: {model_name}")
        print("-" * 70)
        if prompt:
            print(prompt[:300] + "..." if len(prompt) > 300 else prompt)
        else:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        print("-" * 70)
    
    return True

def test_advanced_configuration():
    """–¢–µ—Å—Ç 6: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"""
    print("\n" + "=" * 70)
    print("–¢–ï–°–¢ 6: –ü–†–û–î–í–ò–ù–£–¢–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø")
    print("=" * 70)
    
    try:
        llm = ChatOpenAI(
            model="gpt-5-chat-latest",
            temperature=0.8,
            max_tokens=4000,  # –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–∞
            api_key=API_KEY
        )
        
        # –°–æ–∑–¥–∞–µ–º PromptTuner —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        prompt_tuner = PromptTuner(target_model=llm)
        
        task = "Generate creative product names for a new eco-friendly water bottle"
        
        print(f"\nüìù –ó–∞–¥–∞—á–∞: {task}")
        print("\nüîÑ –ó–∞–ø—É—Å–∫ —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...")
        
        prompt_tuner.run(task)
        
        print("\n‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\n" + "=" * 70)
        print("–ö–†–ï–ê–¢–ò–í–ù–´–ô –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢:")
        print("=" * 70)
        print(prompt_tuner.final_prompt)
        print("=" * 70)
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("\n" + "üöÄ" * 35)
    print("  –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï COOLPROMPT –° GPT-5 –ú–û–î–ï–õ–Ø–ú–ò")
    print("üöÄ" * 35)
    
    print("\nüìå –í–µ—Ä—Å–∏—è: CoolPrompt v1.1.0")
    print("ü§ñ –ú–æ–¥–µ–ª–∏: GPT-5, GPT-5-chat-latest, GPT-5-mini")
    print("üéØ –¶–µ–ª—å: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤")
    
    results = []
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    tests = [
        ("–ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", test_basic_prompt_optimization),
        ("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–æ–¥–∞", test_custom_task_optimization),
        ("GPT-5-mini", test_with_gpt5_mini),
        ("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –æ—Ü–µ–Ω–∫–æ–π", test_with_evaluation),
        ("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π", test_compare_models),
        ("–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", test_advanced_configuration),
    ]
    
    for test_name, test_func in tests:
        print(f"\n{'='*70}")
        print(f"–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {test_name}")
        print('='*70)
        
        try:
            success = test_func()
            results.append((test_name, success))
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
            results.append((test_name, False))
        
        print("\n‚è∏Ô∏è  –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏...")
        import time
        time.sleep(2)
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –¢–ê–ë–õ–ò–¶–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
    print("=" * 70)
    
    success_count = 0
    for test_name, success in results:
        status = "‚úÖ –£–°–ü–ï–•" if success else "‚ùå –ü–†–û–í–ê–õ"
        print(f"{status:12} | {test_name}")
        if success:
            success_count += 1
    
    print("=" * 70)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success_count}/{len(results)}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {len(results) - success_count}/{len(results)}")
    print("=" * 70)
    
    if success_count > 0:
        print("\nüéâ CoolPrompt —Ä–∞–±–æ—Ç–∞–µ—Ç —Å GPT-5!")
        print("\nüí° –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
        print("   ‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤")
        print("   ‚úì –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö GPT-5 –º–æ–¥–µ–ª–µ–π")
        print("   ‚úì –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–º–ø—Ç–æ–≤")
        print("   ‚úì LLM-–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥")
        print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/CTLab-ITMO/CoolPrompt")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    try:
        import coolprompt
        print("‚úÖ CoolPrompt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print(f"üì¶ –í–µ—Ä—Å–∏—è: {coolprompt.__version__ if hasattr(coolprompt, '__version__') else 'unknown'}")
    except ImportError:
        print("‚ùå CoolPrompt –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("\nüì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É:")
        print("   pip install coolprompt")
        print("\n–∏–ª–∏:")
        print("   git clone https://github.com/CTLab-ITMO/CoolPrompt.git")
        print("   pip install -r requirements.txt")
        exit(1)
    
    try:
        from langchain_openai import ChatOpenAI
        print("‚úÖ LangChain OpenAI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå LangChain OpenAI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("\nüì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:")
        print("   pip install langchain-openai")
        exit(1)
    
    main()

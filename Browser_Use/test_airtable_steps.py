"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Airtable
–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–∞–∂–¥—ã–π —à–∞–≥ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ
"""
import asyncio
from pathlib import Path
from browser_use import Agent
from dotenv import load_dotenv
from config import get_llm, get_app_config
from browser_use_helpers import extract_email_from_result, is_valid_email

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
ENV_PATH = Path(__file__).parent / ".env"
load_dotenv(dotenv_path=ENV_PATH)


async def test_temp_mail():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ—á—Ç—ã"""
    print("\n" + "="*60)
    print("üß™ –¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ—á—Ç—ã")
    print("="*60)
    
    llm = get_llm()
    agent = Agent(
        task="""
        1. –û—Ç–∫—Ä–æ–π https://temp-mail.io/ru
        2. –î–æ–∂–¥–∏—Å—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        3. –°–∫–æ–ø–∏—Ä—É–π email –∞–¥—Ä–µ—Å –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        4. –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ email –∞–¥—Ä–µ—Å (—Ñ–æ—Ä–º–∞—Ç: xxx@xxx.xxx)
        """,
        llm=llm,
        use_vision=True
    )
    
    result = await agent.run()
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º helper –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è email
    email = extract_email_from_result(result)
    
    print(f"\nüìß –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π email: {email}")
    
    if email and is_valid_email(email):
        print(f"‚úÖ Email –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ: {email}")
        return email
    else:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π email")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {str(result)[:300]}...")
        return None


async def test_airtable_form():
    """–¢–µ—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã Airtable"""
    print("\n" + "="*60)
    print("üß™ –¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã Airtable")
    print("="*60)
    
    llm = get_llm()
    agent = Agent(
        task="""
        1. –û—Ç–∫—Ä–æ–π https://airtable.com/invite/r/ovoAP1zR
        2. –î–æ–∂–¥–∏—Å—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        3. –ù–∞–π–¥–∏ –∏ –æ–ø–∏—à–∏ –∫–∞–∫–∏–µ –ø–æ–ª—è –µ—Å—Ç—å –≤ —Ñ–æ—Ä–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        4. –í–µ—Ä–Ω–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã (Email, Full name, Password –∏ —Ç.–¥.)
        """,
        llm=llm,
        use_vision=True
    )
    
    result = await agent.run()
    print(f"\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã:")
    print(result)


async def test_multi_tab():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –≤–∫–ª–∞–¥–∫–∞–º–∏"""
    print("\n" + "="*60)
    print("üß™ –¢–µ—Å—Ç: –†–∞–±–æ—Ç–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –≤–∫–ª–∞–¥–∫–∞–º–∏")
    print("="*60)
    
    llm = get_llm()
    
    # –í browser-use –Ω–µ—Ç execute_task, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥
    task = """
    1. –û—Ç–∫—Ä–æ–π https://example.com –∏ –¥–æ–∂–¥–∏—Å—å –∑–∞–≥—Ä—É–∑–∫–∏
    2. –û—Ç–∫—Ä–æ–π –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ https://google.com
    3. –ü–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞ –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É –∏ —É–±–µ–¥–∏—Å—å —á—Ç–æ —ç—Ç–æ example.com
    4. –ü–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞ –≤—Ç–æ—Ä—É—é –≤–∫–ª–∞–¥–∫—É –∏ —É–±–µ–¥–∏—Å—å —á—Ç–æ —ç—Ç–æ google.com
    5. –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
    """
    
    agent = Agent(task=task, llm=llm)
    result = await agent.run()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: {result}")
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")


async def test_form_filling():
    """–¢–µ—Å—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã"""
    print("\n" + "="*60)
    print("üß™ –¢–µ—Å—Ç: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ñ–æ—Ä–º—ã")
    print("="*60)
    
    llm = get_llm()
    agent = Agent(
        task="""
        1. –û—Ç–∫—Ä–æ–π https://www.w3schools.com/html/html_forms.asp
        2. –ù–∞–π–¥–∏ –ª—é–±—É—é —Ñ–æ—Ä–º—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        3. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è: –∏–º—è "Test User", email "test@example.com"
        4. –ù–ï –û–¢–ü–†–ê–í–õ–Ø–ô —Ñ–æ—Ä–º—É, —Ç–æ–ª—å–∫–æ –∑–∞–ø–æ–ª–Ω–∏
        5. –í–µ—Ä–Ω–∏ —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        """,
        llm=llm,
        use_vision=True
    )
    
    result = await agent.run()
    print(f"\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è: {result}")


async def test_email_monitoring():
    """–¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ—á—Ç—ã (—Å–∏–º—É–ª—è—Ü–∏—è)"""
    print("\n" + "="*60)
    print("üß™ –¢–µ—Å—Ç: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ temp-mail (—Å–∏–º—É–ª—è—Ü–∏—è)")
    print("="*60)
    
    llm = get_llm()
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º –æ—Ç–∫—Ä—ã—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
    task = """
    1. –û—Ç–∫—Ä–æ–π https://temp-mail.io/ru
    2. –î–æ–∂–¥–∏—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    3. –ü—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞
    4. –í–µ—Ä–Ω–∏ —Å—Ç–∞—Ç—É—Å: "FOUND" –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∏—Å—å–º–∞, –∏–Ω–∞—á–µ "EMPTY"
    """
    
    agent = Agent(task=task, llm=llm)
    result = await agent.run()
    
    print(f"\nÔøΩ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {result}")
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")


async def test_full_flow_dry_run():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç flow –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("\n" + "="*60)
    print("üß™ –¢–µ—Å—Ç: –ü–æ–ª–Ω—ã–π flow (dry run)")
    print("="*60)
    
    llm = get_llm()
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —à–∞–≥–∏ –≤ –æ–¥–Ω—É –∑–∞–¥–∞—á—É
    task = """
    1. –û—Ç–∫—Ä–æ–π https://airtable.com/invite/r/ovoAP1zR –∏ –¥–æ–∂–¥–∏—Å—å –∑–∞–≥—Ä—É–∑–∫–∏
    2. –û—Ç–∫—Ä–æ–π –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ https://temp-mail.io/ru
    3. –°–∫–æ–ø–∏—Ä—É–π email –∞–¥—Ä–µ—Å —Å temp-mail
    4. –ü–µ—Ä–µ–∫–ª—é—á–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å Airtable
    5. –ù–∞–π–¥–∏ –∏ –æ–ø–∏—à–∏ –ø–æ–ª—è —Ñ–æ—Ä–º—ã (Email address, Full name, Password)
    6. –í–µ—Ä–Ω–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–π email –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π
    """
    
    agent = Agent(task=task, llm=llm, use_vision=True)
    result = await agent.run()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç dry run:")
    print(result)
    print("\n‚úÖ Dry run –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("üí° –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç, –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–ª–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é")


async def main():
    """–ú–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–∞"""
    try:
        config = get_app_config()
        config.print_config()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return
    
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò AIRTABLE")
    print("="*60)
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:")
    print("1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ—á—Ç—ã")
    print("2. –¢–µ—Å—Ç —Ñ–æ—Ä–º—ã Airtable")
    print("3. –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –≤–∫–ª–∞–¥–∫–∞–º–∏")
    print("4. –¢–µ—Å—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã")
    print("5. –¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ—á—Ç—ã")
    print("6. –ü–æ–ª–Ω—ã–π flow (dry run)")
    print("7. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã")
    print("0. –í—ã—Ö–æ–¥")
    
    choice = input("\nüëâ –í–∞—à –≤—ã–±–æ—Ä (0-7): ").strip()
    
    tests = {
        "1": ("–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ—á—Ç—ã", test_temp_mail),
        "2": ("–§–æ—Ä–º–∞ Airtable", test_airtable_form),
        "3": ("–†–∞–±–æ—Ç–∞ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏", test_multi_tab),
        "4": ("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã", test_form_filling),
        "5": ("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—á—Ç—ã", test_email_monitoring),
        "6": ("–ü–æ–ª–Ω—ã–π flow", test_full_flow_dry_run)
    }
    
    if choice == "7":
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...")
        for name, test_func in tests.values():
            try:
                print(f"\n{'='*60}")
                print(f"‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫: {name}")
                print('='*60)
                await test_func()
                await asyncio.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{name}': {e}")
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    elif choice in tests:
        name, test_func = tests[choice]
        print(f"\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: {name}")
        try:
            await test_func()
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
            
    elif choice == "0":
        print("\nüëã –í—ã—Ö–æ–¥")
        
    else:
        print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")


if __name__ == "__main__":
    asyncio.run(main())

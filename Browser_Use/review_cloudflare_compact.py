"""
üîç –ö–û–ú–ü–ê–ö–¢–ù–ê–Ø –í–ï–†–°–ò–Ø: –ê–Ω–∞–ª–∏–∑ –∑–∞—â–∏—Ç—ã –æ—Ç Cloudflare –¥–ª—è test_agent3_air.py

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç CoolPrompt PromptTuner –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
–§–æ–∫—É—Å –Ω–∞ Cloudflare bypass + –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∫–æ–¥–∞
"""
import os
import sys
from pathlib import Path
from coolprompt.assistant import PromptTuner
from langchain_openai import ChatOpenAI
from io import StringIO
import logging

# –ü–æ–¥–∞–≤–ª—è–µ–º NLTK –ª–æ–≥–∏
logging.getLogger('nltk').setLevel(logging.CRITICAL)

class SuppressNLTKDownload:
    def __enter__(self):
        self._original_stderr = sys.stderr
        sys.stderr = StringIO()
        return self
    
    def __exit__(self, *args):
        sys.stderr = self._original_stderr

import nltk
with SuppressNLTKDownload():
    try:
        nltk.download('wordnet', quiet=True)
        nltk.download('punkt_tab', quiet=True)
        nltk.download('omw-1.4', quiet=True)
    except:
        pass

API_KEY = os.environ.get("OPENAI_API_KEY", "your-api-key-here")


def create_cloudflare_review_task() -> str:
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞—á—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∑–∞—â–∏—Ç—ã –æ—Ç Cloudflare"""
    
    task = """
üéØ –ó–ê–î–ê–ß–ê: –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞—â–∏—Ç—ã –æ—Ç Cloudflare –≤ Python —Å–∫—Ä–∏–ø—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞

## –ö–û–ù–¢–ï–ö–°–¢
Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ Airtable –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:
- Playwright –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
- Google Gemini 2.5 Computer Use API –¥–ª—è AI-—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
- playwright_stealth –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏–±–æ—Ç —Å–∏—Å—Ç–µ–º
- –î–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: temp-mail ‚Üí —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Üí –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ

## –ü–†–û–ë–õ–ï–ú–ê
–°–∫—Ä–∏–ø—Ç **–≤—Å–µ –µ—â–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è Cloudflare**, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ stealth –ø–ª–∞–≥–∏–Ω–∞.

## –¢–ï–ö–£–©–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–©–ò–¢–´

```python
# 1. –ò–º–ø–æ—Ä—Ç stealth
from playwright_stealth import stealth_async

# 2. –§—É–Ω–∫—Ü–∏—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
async def detect_cloudflare_block(page) -> tuple[bool, str]:
    title = await page.title()
    body_text = await page.evaluate("() => document.body.innerText")
    
    indicators = []
    if "Attention Required" in title and "Cloudflare" in title:
        indicators.append("title:Attention Required | Cloudflare")
    if "Sorry, you have been blocked" in body_text:
        indicators.append("text:blocked")
    if "Cloudflare Ray ID" in body_text:
        indicators.append("text:ray_id")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø—Ä–∏–∑–Ω–∞–∫ –±–ª–æ–∫–∞)
    body_html_size = await page.evaluate("() => document.body.innerHTML.length")
    if body_html_size < 100:
        indicators.append(f"html_size:{body_html_size} (possible_block)")
    
    blocked = len(indicators) > 0
    return blocked, ", ".join(indicators)

# 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (–ø—Ä–∏–º–∏—Ç–∏–≤–Ω–∞—è)
blocked, signal = await detect_cloudflare_block(page)
if blocked:
    print(f"üõ°Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω Cloudflare –±–ª–æ–∫: {signal}")
    await asyncio.sleep(10)  # –ü—Ä–æ—Å—Ç–æ –∂–¥—ë–º 10 —Å–µ–∫—É–Ω–¥
    blocked, signal = await detect_cloudflare_block(page)
    if blocked:
        return {"status": "ERROR", "reason": "Cloudflare block"}
```

## –ë–ò–ó–ù–ï–°-–¢–†–ï–ë–û–í–ê–ù–ò–Ø

–ò–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ BUSINESS_LOGIC.md:
- ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ 90-120 —Å–µ–∫—É–Ω–¥
- ‚úÖ Success Rate: 85-95%
- ‚úÖ –û–±—Ö–æ–¥ Cloudflare –∫—Ä–∏—Ç–∏—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
- ‚úÖ –ù–µ–æ–±—Ö–æ–¥–∏–º human-like behavior (–∫–ª–∏–∫–∏, —Å–∫—Ä–æ–ª–ª–∏–Ω–≥, timing)
- ‚úÖ Retry –º–µ—Ö–∞–Ω–∏–∑–º –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ

## –ß–¢–û –¢–†–ï–ë–£–ï–¢–°–Ø

### 1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú
–û–ø—Ä–µ–¥–µ–ª–∏ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ —Ç–µ–∫—É—â–µ–π –∑–∞—â–∏—Ç—ã:
- –ö–∞–∫–∏–µ —Å–∏–≥–Ω–∞–ª—ã –≤—ã–¥–∞—é—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é?
- –ü–æ—á–µ–º—É playwright_stealth –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ?
- –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –¥–µ—Ç–µ–∫—Ç–∏—Ä—É–µ—Ç Cloudflare?

### 2Ô∏è‚É£ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –†–ï–®–ï–ù–ò–ï (2025 –≥–æ–¥, –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ)

–ü—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–ª–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –æ–±—Ö–æ–¥–∞ –≤–∫–ª—é—á–∞—é—â—É—é:

**A. Browser Fingerprinting**
- User-Agent (—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π Windows/Chrome)
- WebGL, Canvas, Audio fingerprints
- Screen resolution, timezone, —è–∑—ã–∫–∏
- Plugins, MIME types
- WebRTC leak prevention

**B. Network Protection**
- HTTP headers (realistic –Ω–∞–±–æ—Ä)
- Cookie handling
- TLS fingerprinting
- HTTP/2 –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

**C. Behavioral Patterns**
- Random delays (human-like timing)
- Mouse movements (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ CDP)
- Scroll simulation
- Focus/blur events

**D. Playwright Configuration**
- Browser launch args –¥–ª—è stealth
- Context options
- CDP commands –¥–ª—è anti-detection
- Viewport –∏ screen –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

### 3Ô∏è‚É£ –ì–û–¢–û–í–´–ô –ö–û–î

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å Python –∫–æ–¥ –¥–ª—è:

```python
# A. –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ stealth –±—Ä–∞—É–∑–µ—Ä–∞
async def create_stealth_browser():
    # –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç–æ–π
    pass

# B. –§—É–Ω–∫—Ü–∏—è –æ–±—Ö–æ–¥–∞ Cloudflare challenge
async def bypass_cloudflare_if_detected(page):
    # –£–º–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    pass

# C. Retry –º–µ—Ö–∞–Ω–∏–∑–º —Å —Ä–æ—Ç–∞—Ü–∏–µ–π fingerprints
async def navigate_with_cloudflare_bypass(page, url, max_retries=3):
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º retry
    pass
```

### 4Ô∏è‚É£ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´

–†–µ–∫–æ–º–µ–Ω–¥—É–π:
- Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (–∫—Ä–æ–º–µ playwright_stealth)
- Playwright —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è/–ø–ª–∞–≥–∏–Ω—ã
- CDP (Chrome DevTools Protocol) –∫–æ–º–∞–Ω–¥—ã
- –ü—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–∏—Å—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã –¥–ª—è IP rotation)
- Captcha solving —Å–µ—Ä–≤–∏—Å—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)

### 5Ô∏è‚É£ CODE REVIEW –ö–†–ò–¢–ò–ß–ù–´–• –ü–†–û–ë–õ–ï–ú

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–æ–¥–∞ –Ω–∞:
- Race conditions –≤ async —Ñ—É–Ω–∫—Ü–∏—è—Ö
- Memory leaks (—Å–∫—Ä–∏–Ω—à–æ—Ç—ã –Ω–∞–∫–∞–ø–ª–∏–≤–∞—é—Ç—Å—è?)
- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ timeout'–æ–≤
- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
- –ü—Ä–æ–±–ª–µ–º—ã —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π URL

## –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê

–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç —Ç–∞–∫:

### üìä 1. –ü–†–û–ë–õ–ï–ú–´ –¢–ï–ö–£–©–ï–ô –†–ï–ê–õ–ò–ó–ê–¶–ò–ò
[–°–ø–∏—Å–æ–∫ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏]

### üõ°Ô∏è 2. –ö–û–ú–ü–õ–ï–ö–°–ù–ê–Ø –ó–ê–©–ò–¢–ê –û–¢ CLOUDFLARE

#### 2.1 –ö–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
```python
# –° –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
```

#### 2.2 –ö–æ–¥ –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
```python
# –° –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
```

#### 2.3 Retry –º–µ—Ö–∞–Ω–∏–∑–º
```python
# –° –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
```

### üì¶ 3. –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –ò –ë–ò–ë–õ–ò–û–¢–ï–ö–ò
| –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ | –£—Å—Ç–∞–Ω–æ–≤–∫–∞ | –°–ª–æ–∂–Ω–æ—Å—Ç—å |
|------------|-----------|-----------|-----------|

### ‚ö†Ô∏è 4. –ö–†–ò–¢–ò–ß–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ –í –ö–û–î–ï
[–°–ø–∏—Å–æ–∫ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ —Ä–µ—à–µ–Ω–∏—è–º–∏]

### üéØ 5. –ò–¢–û–ì–û–í–´–ô –ß–ï–ö–õ–ò–°–¢ –í–ù–ï–î–†–ï–ù–ò–Ø
- [ ] –®–∞–≥ 1: ...
- [ ] –®–∞–≥ 2: ...
- [ ] –®–∞–≥ 3: ...

---

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
‚úì –û—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
‚úì –ö–æ–¥ —Å —Ä—É—Å—Å–∫–∏–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
‚úì –ü—Ä–∞–∫—Ç–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ 2025 –≥–æ–¥—É
‚úì –ü—Ä–∏–º–µ—Ä—ã –≥–æ—Ç–æ–≤—ã–µ –∫ copy-paste
‚úì –¢–∞–±–ª–∏—Ü—ã –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
‚úì –°—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ

–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–∫ senior Python developer —Å –æ–ø—ã—Ç–æ–º web scraping! üöÄ
"""
    
    return task


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 80)
    print("üîç –ê–ù–ê–õ–ò–ó: CLOUDFLARE PROTECTION + CODE REVIEW")
    print("=" * 80)
    print("\nüì¶ GPT-5 Pro + CoolPrompt PromptTuner")
    print("üéØ –§–æ–∫—É—Å: –û–±—Ö–æ–¥ Cloudflare + –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã\n")
    
    try:
        print("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GPT-5 Pro...")
        llm = ChatOpenAI(
            model="gpt-5-pro",
            temperature=0.3,
            api_key=API_KEY
        )
        
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PromptTuner...")
        prompt_tuner = PromptTuner(target_model=llm)
        
        print("üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏...")
        task = create_cloudflare_review_task()
        
        print(f"\nüìä –†–∞–∑–º–µ—Ä –∑–∞–¥–∞—á–∏: {len(task)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        print("\n" + "=" * 80)
        print("üîÑ –ó–ê–ü–£–°–ö –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ü–†–û–ú–ü–¢–ê...")
        print("=" * 80)
        print("‚è±Ô∏è  –û–∂–∏–¥–∞–π—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã...\n")
        
        prompt_tuner.run(task)
        
        print("\n" + "=" * 80)
        print("‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("=" * 80)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        output_file = Path(__file__).parent / "CLOUDFLARE_BYPASS_PROMPT.md"
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write("# üõ°Ô∏è –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢: –ó–ê–©–ò–¢–ê –û–¢ CLOUDFLARE\n\n")
            f.write("## üìã –°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é CoolPrompt PromptTuner\n\n")
            f.write("### üéØ –¶–µ–ª—å: –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –æ–±—Ö–æ–¥ Cloudflare –≤ Playwright + Code Review\n\n")
            f.write("---\n\n")
            f.write(prompt_tuner.final_prompt)
        
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç: {output_file}")
        print("\n" + "=" * 80)
        print("üìÑ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢:")
        print("=" * 80)
        print(prompt_tuner.final_prompt)
        print("=" * 80)
        
        print("\n‚ú® –ì–û–¢–û–í–û!")
        print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –û—Ç–∫—Ä–æ–π —Ñ–∞–π–ª: CLOUDFLARE_BYPASS_PROMPT.md")
        print("   2. –°–∫–æ–ø–∏—Ä—É–π –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç")
        print("   3. –û—Ç–ø—Ä–∞–≤—å GPT-5 Pro –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        print("   4. –ü–æ–ª—É—á–∏ –≥–æ—Ç–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –æ–±—Ö–æ–¥–∞ Cloudflare")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        print(f"–¢–∏–ø: {type(e).__name__}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

import os
from dotenv import load_dotenv
from pathlib import Path
from google import genai
from google.genai import types

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
ENV_PATH = Path(__file__).parent / ".env"
load_dotenv(dotenv_path=ENV_PATH)

api_key = os.getenv("GOOGLE_API_KEY")
if not api_key:
    print("‚ùå GOOGLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
    exit(1)

# –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç–∞ —Å –Ω–æ–≤—ã–º SDK
client = genai.Client(api_key=api_key)

print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Gemini (—á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π SDK):\n")
print("="*70)

try:
    for model in client.models.list():
        print(f"\n‚úÖ {model.name}")
        if hasattr(model, 'display_name'):
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {model.display_name}")
        if hasattr(model, 'description'):
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {model.description[:100]}")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π: {e}")
    print("\nüí° –ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ –Ω–∞–ø—Ä—è–º—É—é:\n")
    
    # –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    known_models = [
        "gemini-2.0-flash-exp",
        "gemini-2.0-flash",
        "gemini-1.5-flash",
        "gemini-1.5-flash-002",
        "gemini-1.5-flash-8b",
        "gemini-1.5-pro",
        "gemini-2.5-flash",
    ]
    
    for model_name in known_models:
        try:
            # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª—å
            test_model = client.models.get(model_name)
            print(f"‚úÖ {model_name} - –¥–æ—Å—Ç—É–ø–Ω–∞")
        except Exception as e:
            print(f"‚ùå {model_name} - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {str(e)[:50]}")

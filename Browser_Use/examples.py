"""
–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è multi_scenario.py

–≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏–∑ multi_scenario.py
–≤ –≤–∞—à–∏—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é.
"""

import asyncio
from multi_scenario import (
    get_llm,
    get_profile_path,
    NewsSearchScenario,
    RegistrationScenario,
    PriceMonitoringScenario,
    WikipediaScenario
)


# ==================== –ü–†–ò–ú–ï–† 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è ====================

async def example_1_simple_news_search():
    """–ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Ä–µ–∂–∏–º–µ –µ–¥–∏–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞"""
    
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 1: –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("="*60 + "\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    llm = get_llm()
    profile_path = get_profile_path()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è
    scenario = NewsSearchScenario(llm, profile_path)
    result = await scenario.run(
        query="–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç",
        mode="single_prompt"
    )
    
    print("\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:", result)


# ==================== –ü–†–ò–ú–ï–† 2: –ü–æ—à–∞–≥–æ–≤—ã–π —Ä–µ–∂–∏–º ====================

async def example_2_step_by_step():
    """–ü–æ—à–∞–≥–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏"""
    
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 2: –ü–æ—à–∞–≥–æ–≤—ã–π –ø–æ–∏—Å–∫ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏")
    print("="*60 + "\n")
    
    llm = get_llm()
    profile_path = get_profile_path()
    
    scenario = WikipediaScenario(llm, profile_path)
    results = await scenario.run(
        topic="–ö–≤–∞–Ω—Ç–æ–≤—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã",
        mode="step_by_step"
    )
    
    print(f"\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —à–∞–≥–æ–≤: {len(results) if isinstance(results, list) else 1}")


# ==================== –ü–†–ò–ú–ï–† 3: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ ====================

async def example_3_sequential():
    """–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 3: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á")
    print("="*60 + "\n")
    
    llm = get_llm()
    profile_path = get_profile_path()
    
    # –ó–∞–¥–∞—á–∞ 1: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
    print("\n--- –ó–∞–¥–∞—á–∞ 1: –ù–æ–≤–æ—Å—Ç–∏ ---")
    news_scenario = NewsSearchScenario(llm, profile_path)
    await news_scenario.run("—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", mode="single_prompt")
    
    # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏
    await asyncio.sleep(3)
    
    # –ó–∞–¥–∞—á–∞ 2: –í–∏–∫–∏–ø–µ–¥–∏—è
    print("\n--- –ó–∞–¥–∞—á–∞ 2: –í–∏–∫–∏–ø–µ–¥–∏—è ---")
    wiki_scenario = WikipediaScenario(llm, profile_path)
    await wiki_scenario.run("Python", mode="single_prompt")
    
    print("\n‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")


# ==================== –ü–†–ò–ú–ï–† 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ====================

async def example_4_error_handling():
    """–ü—Ä–∏–º–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
    print("="*60 + "\n")
    
    try:
        llm = get_llm()
        profile_path = get_profile_path()
        
        scenario = NewsSearchScenario(llm, profile_path)
        result = await scenario.run("—Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å", mode="single_prompt")
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


# ==================== –ü–†–ò–ú–ï–† 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ ====================

async def example_5_custom_data():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 5: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("="*60 + "\n")
    
    llm = get_llm()
    profile_path = get_profile_path()
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        "first_name": "–ê–ª–µ–∫—Å–µ–π",
        "last_name": "–°–º–∏—Ä–Ω–æ–≤",
        "email": "alexey.smirnov@example.com",
        "mobile": "9171234567",
        "gender": "Male"
    }
    
    scenario = RegistrationScenario(llm, profile_path)
    result = await scenario.run(user_data, mode="single_prompt")
    
    print("\n‚úÖ –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!")


# ==================== –ü–†–ò–ú–ï–† 6: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ ====================

async def example_6_multiple_products():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤"""
    
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 6: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤")
    print("="*60 + "\n")
    
    llm = get_llm()
    profile_path = get_profile_path()
    
    products = ["iPhone 15", "Samsung Galaxy S24", "Xiaomi 14"]
    
    scenario = PriceMonitoringScenario(llm, profile_path)
    
    for i, product in enumerate(products, 1):
        print(f"\n--- –¢–æ–≤–∞—Ä {i}/{len(products)}: {product} ---")
        
        try:
            await scenario.run(product, mode="single_prompt")
            print(f"‚úÖ {product} - —Ü–µ–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå {product} - –æ—à–∏–±–∫–∞: {e}")
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        if i < len(products):
            await asyncio.sleep(5)
    
    print("\n‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω!")


# ==================== –ü–†–ò–ú–ï–† 7: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è ====================

async def example_7_custom_scenario():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞"""
    
    from multi_scenario import ScenarioRunner
    
    class CustomScenario(ScenarioRunner):
        """–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: –ø–æ–∏—Å–∫ –Ω–∞ GitHub"""
        
        async def run(self, repo_name: str, mode: str = "single_prompt"):
            print(f"\nüîß CUSTOM: –ü–æ–∏—Å–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {repo_name}")
            
            if mode == "single_prompt":
                task = f"""
                1. –û—Ç–∫—Ä–æ–π github.com
                2. –ù–∞–π–¥–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π "{repo_name}"
                3. –û—Ç–∫—Ä–æ–π –ø–µ—Ä–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                4. –ü—Ä–æ—á–∏—Ç–∞–π –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
                5. –ü–æ—Å–º–æ—Ç—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥
                """
                return await self.run_single_prompt(task)
            
            elif mode == "step_by_step":
                steps = [
                    "–û—Ç–∫—Ä–æ–π —Å–∞–π—Ç github.com",
                    f"–í–≤–µ–¥–∏ –≤ –ø–æ–∏—Å–∫ '{repo_name}'",
                    "–û—Ç–∫—Ä–æ–π –ø–µ—Ä–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
                    "–ü—Ä–æ—á–∏—Ç–∞–π –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è",
                    "–ù–∞–π–¥–∏ –∏ –ø—Ä–æ—á–∏—Ç–∞–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥",
                ]
                return await self.run_step_by_step(steps)
    
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 7: –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π (GitHub)")
    print("="*60 + "\n")
    
    llm = get_llm()
    profile_path = get_profile_path()
    
    scenario = CustomScenario(llm, profile_path)
    await scenario.run("python/cpython", mode="single_prompt")
    
    print("\n‚úÖ –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω!")


# ==================== –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –ü–†–ò–ú–ï–†–û–í ====================

async def run_examples():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"""
    
    print("\n" + "="*70)
    print(" "*20 + "–ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø")
    print("="*70)
    
    examples = {
        "1": ("–ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π", example_1_simple_news_search),
        "2": ("–ü–æ—à–∞–≥–æ–≤—ã–π —Ä–µ–∂–∏–º", example_2_step_by_step),
        "3": ("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ", example_3_sequential),
        "4": ("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫", example_4_error_handling),
        "5": ("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ", example_5_custom_data),
        "6": ("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤", example_6_multiple_products),
        "7": ("–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π", example_7_custom_scenario),
    }
    
    print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:")
    for key, (name, _) in examples.items():
        print(f"  {key}. {name}")
    print("  0. –í—ã—Ö–æ–¥")
    print("  all. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã")
    
    choice = input("\nüëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä (0-7, all): ").strip().lower()
    
    if choice == "0":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        return
    
    if choice == "all":
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤...\n")
        for name, func in examples.values():
            print(f"\n{'='*70}")
            print(f"‚ñ∂Ô∏è  {name}")
            print("="*70)
            try:
                await func()
            except Exception as e:
                print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ: {e}")
            await asyncio.sleep(2)
        print("\n‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
    
    elif choice in examples:
        name, func = examples[choice]
        print(f"\nüöÄ –ó–∞–ø—É—Å–∫: {name}\n")
        await func()
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")


# ==================== –¢–û–ß–ö–ê –í–•–û–î–ê ====================

if __name__ == "__main__":
    try:
        asyncio.run(run_examples())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

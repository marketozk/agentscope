"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ google-generativeai –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –¥–ª—è Code Execution Tool
"""
import google.generativeai as genai
from google.generativeai.types import Tool
import inspect

print("=" * 70)
print("üì¶ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–ò–ë–õ–ò–û–¢–ï–ö–ï google-generativeai")
print("=" * 70)

# –í–µ—Ä—Å–∏—è
print(f"\nüî¢ –í–µ—Ä—Å–∏—è: {genai.__version__}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤ Tool
print(f"\nüîß –ê—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞ Tool:")
tool_attrs = [attr for attr in dir(Tool) if not attr.startswith('_')]
for attr in tool_attrs:
    obj = getattr(Tool, attr)
    print(f"   - {attr}: {type(obj).__name__}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ code_execution
print(f"\nüéØ Tool.code_execution:")
print(f"   –¢–∏–ø: {type(Tool.code_execution)}")
print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {Tool.code_execution}")

# –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
if isinstance(Tool.code_execution, property):
    print(f"\n   ‚ö†Ô∏è  code_execution - —ç—Ç–æ property!")
    print(f"   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Tool.code_execution –Ω–∞–ø—Ä—è–º—É—é")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã GenerativeModel
print(f"\nüìù –°–∏–≥–Ω–∞—Ç—É—Ä–∞ GenerativeModel.__init__:")
sig = inspect.signature(genai.GenerativeModel.__init__)
print(f"   {sig}")

print(f"\nüí° –ü–∞—Ä–∞–º–µ—Ç—Ä 'tools' –æ–∂–∏–¥–∞–µ—Ç:")
if 'tools' in sig.parameters:
    param = sig.parameters['tools']
    print(f"   –¢–∏–ø –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏: {param.annotation}")
    print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {param.default}")

print("\n" + "=" * 70)

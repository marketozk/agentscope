"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Gemini 1.5 —á–µ—Ä–µ–∑ API
"""
import os
from pathlib import Path
from dotenv import load_dotenv
import google.generativeai as genai

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
ENV_PATH = Path(__file__).parent / ".env"
load_dotenv(dotenv_path=ENV_PATH)

# –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
api_key = os.getenv("GOOGLE_API_KEY")
if not api_key:
    print("‚ùå GOOGLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
    exit(1)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º API
genai.configure(api_key=api_key)

print("\nüìã –î–û–°–¢–£–ü–ù–´–ï –ú–û–î–ï–õ–ò GEMINI:\n")
print("="*80)

try:
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
    models = genai.list_models()
    
    gemini_models = []
    for model in models:
        if 'gemini' in model.name.lower() and 'generateContent' in model.supported_generation_methods:
            gemini_models.append(model)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Å–∏–∏ (1.5 —Å–Ω–∞—á–∞–ª–∞)
    gemini_models.sort(key=lambda m: m.name)
    
    for model in gemini_models:
        name = model.name.replace('models/', '')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é
        version = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        if '1.5' in name or '1-5' in name:
            version = "1.5"
        elif '2.0' in name or '2-0' in name:
            version = "2.0"
        elif '2.5' in name or '2-5' in name:
            version = "2.5"
        
        print(f"\nü§ñ {name}")
        print(f"   –í–µ—Ä—Å–∏—è: {version}")
        print(f"   Display Name: {model.display_name}")
        print(f"   Description: {model.description[:100] if model.description else 'N/A'}...")
        
        # –õ–∏–º–∏—Ç—ã (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
        if hasattr(model, 'rate_limit'):
            print(f"   Rate Limit: {model.rate_limit}")
        
        # –ú–µ—Ç–æ–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        print(f"   –ú–µ—Ç–æ–¥—ã: {', '.join(model.supported_generation_methods)}")
    
    print("\n" + "="*80)
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(gemini_models)} –º–æ–¥–µ–ª–µ–π Gemini\n")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("   - gemini-1.5-flash: –ë—ã—Å—Ç—Ä–∞—è, —Å—Ç–∞–±–∏–ª—å–Ω–∞—è, —Ö–æ—Ä–æ—à–∏–µ –ª–∏–º–∏—Ç—ã")
    print("   - gemini-1.5-pro: –ú–æ—â–Ω–∞—è, –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á")
    print("   - gemini-2.0-flash-exp: –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è, –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞")
    print("   - gemini-2.5-flash: –ù–æ–≤–µ–π—à–∞—è, –Ω–æ –º–µ–Ω—å—à–µ –ª–∏–º–∏—Ç –Ω–∞ free tier")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π: {e}")
    print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("  1. –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
    print("  2. –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ API")
    print("  3. –ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç")

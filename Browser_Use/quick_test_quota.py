#!/usr/bin/env python3
"""–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–≤–æ—Ç—ã –Ω–∞ gemini-exp-1206"""

import asyncio
from config import AppConfig
from browser_use.llm.messages import UserMessage

async def test_quota():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ gemini-exp-1206"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ gemini-exp-1206...")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥
        config = AppConfig()
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å: {config.model_config['name']}")
        print(f"üìä Rate limits: {config.model_config['requests_per_minute']} RPM, {config.model_config['requests_per_day']} RPD")
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
        
        llm = config.get_llm()
        messages = [UserMessage(content="–°–∫–∞–∂–∏ 'OK' –µ—Å–ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å")]
        
        response = await llm.ainvoke(messages)
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {response.completion[:100]}")
        print("\nüéâ –£–°–ü–ï–•! –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–≤–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞!")
        return True
        
    except Exception as e:
        error_msg = str(e)
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {error_msg}")
        
        if "429" in error_msg or "RESOURCE_EXHAUSTED" in error_msg:
            print("‚ö†Ô∏è  –ö–≤–æ—Ç–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞ –Ω–∞ —ç—Ç–æ–π –º–æ–¥–µ–ª–∏!")
        elif "quota" in error_msg.lower():
            print("‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–≤–æ—Ç–æ–π!")
        else:
            print(f"‚ùì –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__}")
        
        return False

if __name__ == "__main__":
    asyncio.run(test_quota())

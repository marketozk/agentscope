"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ rate limits –¥–ª—è Browser-Use + Gemini
"""

import os
import time
import asyncio
import json
from pathlib import Path
from dotenv import load_dotenv
from browser_use.llm.google import ChatGoogle
from langchain_openai import ChatOpenAI
from datetime import datetime, timedelta

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV_PATH = Path(__file__).parent / ".env"
load_dotenv(dotenv_path=ENV_PATH)


# ==================== –ö–û–ù–°–¢–ê–ù–¢–´ –ú–û–î–ï–õ–ï–ô ====================

class ModelConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π Gemini –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    
    CONFIG_FILE = Path(__file__).parent / "models_config.json"
    
    @classmethod
    def load_from_json(cls):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ JSON —Ñ–∞–π–ª–∞"""
        try:
            with open(cls.CONFIG_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
        except FileNotFoundError:
            raise FileNotFoundError(
                f"‚ùå –§–∞–π–ª {cls.CONFIG_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω!\n"
                "–°–æ–∑–¥–∞–π—Ç–µ models_config.json —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –º–æ–¥–µ–ª–µ–π."
            )
        except json.JSONDecodeError as e:
            raise ValueError(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
    
    @classmethod
    def get_enabled_model(cls):
        """–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –º–æ–¥–µ–ª—å (—Å enabled: true)"""
        config_data = cls.load_from_json()
        models = config_data.get("models", {})
        
        enabled_models = {
            name: cfg for name, cfg in models.items() 
            if cfg.get("enabled", False)
        }
        
        if not enabled_models:
            raise ValueError(
                "‚ùå –ù–∏ –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!\n"
                "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ enabled: true –¥–ª—è –Ω—É–∂–Ω–æ–π –º–æ–¥–µ–ª–∏ –≤ models_config.json"
            )
        
        if len(enabled_models) > 1:
            print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(enabled_models)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–µ—Ä–≤–∞—è")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—É—é –∞–∫—Ç–∏–≤–Ω—É—é –º–æ–¥–µ–ª—å
        model_name = list(enabled_models.keys())[0]
        model_config = enabled_models[model_name]
        model_config["name"] = model_name  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –≤ –∫–æ–Ω—Ñ–∏–≥
        
        return model_config
    
    @classmethod
    def get_config(cls, model_name: str = None):
        """
        –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–∏
        –ï—Å–ª–∏ model_name –Ω–µ —É–∫–∞–∑–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é –º–æ–¥–µ–ª—å
        """
        if model_name is None:
            return cls.get_enabled_model()
        
        config_data = cls.load_from_json()
        models = config_data.get("models", {})
        
        if model_name in models:
            config = models[model_name]
            config["name"] = model_name
            return config
        
        raise ValueError(f"‚ùå –ú–æ–¥–µ–ª—å '{model_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
    
    @classmethod
    def list_models(cls):
        """–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π"""
        try:
            config_data = cls.load_from_json()
            models = config_data.get("models", {})
            
            print("\nüìã –î–û–°–¢–£–ü–ù–´–ï –ú–û–î–ï–õ–ò GEMINI:")
            print("="*70)
            
            for name, config in models.items():
                enabled = "‚úÖ –ê–ö–¢–ò–í–ù–ê" if config.get("enabled") else "‚ö™ –í—ã–∫–ª—é—á–µ–Ω–∞"
                print(f"\nü§ñ {name} - {enabled}")
                print(f"   {config['description']}")
                print(f"   Rate: {config['requests_per_minute']} –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω, {config['requests_per_day']} –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å")
                print(f"   –î–ª—è: {config['recommended_for']}")
            
            print("="*70)
            print("\nüí° –°–æ–≤–µ—Ç: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 'enabled: true' –≤ models_config.json –¥–ª—è –Ω—É–∂–Ω–æ–π –º–æ–¥–µ–ª–∏")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


# ==================== RATE LIMITER ====================

class RateLimiter:
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ rate limits –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    def __init__(self, requests_per_minute: int, requests_per_day: int):
        self.requests_per_minute = requests_per_minute
        self.requests_per_day = requests_per_day
        
        # –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
        self.minute_requests = []
        self.day_requests = []
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.total_requests = 0
        self.blocked_requests = 0
        
    def _cleanup_old_requests(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏"""
        now = datetime.now()
        
        # –û—á–∏—Å—Ç–∫–∞ –º–∏–Ω—É—Ç–Ω–æ–≥–æ –æ–∫–Ω–∞
        minute_ago = now - timedelta(minutes=1)
        self.minute_requests = [t for t in self.minute_requests if t > minute_ago]
        
        # –û—á–∏—Å—Ç–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        day_ago = now - timedelta(days=1)
        self.day_requests = [t for t in self.day_requests if t > day_ago]
    
    def can_make_request(self) -> tuple[bool, str]:
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        Returns: (–º–æ–∂–Ω–æ_–≤—ã–ø–æ–ª–Ω–∏—Ç—å, –ø—Ä–∏—á–∏–Ω–∞_–æ—Ç–∫–∞–∑–∞)
        """
        self._cleanup_old_requests()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω—É—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
        if len(self.minute_requests) >= self.requests_per_minute:
            wait_time = 60 - (datetime.now() - self.minute_requests[0]).seconds
            return False, f"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç {self.requests_per_minute} –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {wait_time}—Å"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
        if len(self.day_requests) >= self.requests_per_day:
            oldest = self.day_requests[0]
            wait_time = (oldest + timedelta(days=1) - datetime.now()).seconds
            wait_hours = wait_time // 3600
            return False, f"–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç {self.requests_per_day} –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {wait_hours}—á"
        
        return True, ""
    
    def register_request(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
        now = datetime.now()
        self.minute_requests.append(now)
        self.day_requests.append(now)
        self.total_requests += 1
    
    async def wait_if_needed(self) -> bool:
        """
        –û–∂–∏–¥–∞–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–±–ª—é—Å—Ç–∏ rate limit
        Returns: True –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, False –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç
        """
        can_request, reason = self.can_make_request()
        
        if can_request:
            return True
        
        # –ï—Å–ª–∏ —ç—Ç–æ –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç - –Ω–µ –∂–¥—ë–º
        if "–¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç" in reason:
            print(f"‚õî {reason}")
            self.blocked_requests += 1
            return False
        
        # –ï—Å–ª–∏ –º–∏–Ω—É—Ç–Ω—ã–π –ª–∏–º–∏—Ç - –∂–¥—ë–º
        if "–ª–∏–º–∏—Ç" in reason and "–∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω" in reason:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
            wait_seconds = int(reason.split("–ü–æ–¥–æ–∂–¥–∏—Ç–µ ")[1].split("—Å")[0])
            print(f"‚è≥ {reason}")
            print(f"‚è∞ –û–∂–∏–¥–∞–Ω–∏–µ {wait_seconds} —Å–µ–∫—É–Ω–¥...")
            await asyncio.sleep(wait_seconds + 1)  # +1 –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏
            return True
        
        return False
    
    def get_stats(self) -> dict:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
        self._cleanup_old_requests()
        return {
            "total_requests": self.total_requests,
            "blocked_requests": self.blocked_requests,
            "minute_remaining": self.requests_per_minute - len(self.minute_requests),
            "day_remaining": self.requests_per_day - len(self.day_requests),
            "minute_used": len(self.minute_requests),
            "day_used": len(self.day_requests)
        }
    
    def print_stats(self):
        """–í—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å"""
        stats = self.get_stats()
        print("\n" + "="*60)
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø API")
        print("="*60)
        print(f"–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['total_requests']}")
        print(f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {stats['blocked_requests']}")
        print(f"\n–¢–µ–∫—É—â–∞—è –º–∏–Ω—É—Ç–∞: {stats['minute_used']}/{self.requests_per_minute} "
              f"(–æ—Å—Ç–∞–ª–æ—Å—å: {stats['minute_remaining']})")
        print(f"–¢–µ–∫—É—â–∏–π –¥–µ–Ω—å: {stats['day_used']}/{self.requests_per_day} "
              f"(–æ—Å—Ç–∞–ª–æ—Å—å: {stats['day_remaining']})")
        print("="*60)


# ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ====================

class AppConfig:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    def __init__(self):
        # API –∫–ª—é—á
        self.api_key = os.getenv("GOOGLE_API_KEY")
        if not self.api_key:
            raise ValueError(
                "‚ùå GOOGLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!\n"
                "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example"
            )
        
        # –í—ã–±–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏–∑ JSON –∫–æ–Ω—Ñ–∏–≥–∞
        self.model_config = ModelConfig.get_enabled_model()
        
        # Rate limiter
        self.rate_limiter = RateLimiter(
            requests_per_minute=self.model_config["requests_per_minute"],
            requests_per_day=self.model_config["requests_per_day"]
        )
        
        # –ü—Ä–æ—Ñ–∏–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
        self.profile_path = Path(__file__).parent / "profile_data"
        self.profile_path.mkdir(exist_ok=True)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ API –∫–ª—é—á–∞ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        os.environ.setdefault("GOOGLE_API_KEY", self.api_key)
    
    def get_llm(self):
        """–ü–æ–ª—É—á–∏—Ç—å LLM –º–æ–¥–µ–ª—å"""
        provider = self.model_config.get("provider", "google")
        
        if provider == "google":
            return ChatGoogle(
                model=self.model_config["model_string"],
                temperature=0.2,
                api_key=self.api_key
            )
        elif provider == "deepseek":
            deepseek_key = os.getenv("DEEPSEEK_API_KEY")
            if not deepseek_key:
                raise ValueError("‚ùå DEEPSEEK_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
            
            return ChatOpenAI(
                model=self.model_config["model_string"],
                temperature=0.2,
                api_key=deepseek_key,
                base_url="https://api.deepseek.com"
            )
        else:
            raise ValueError(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {provider}")
    
    def print_config(self):
        """–í—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        print("\n" + "="*60)
        print("‚öôÔ∏è  –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø")
        print("="*60)
        print(f"ü§ñ –ú–æ–¥–µ–ª—å: {self.model_config['name']}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {self.model_config['description']}")
        print(f"‚ö° Rate Limits:")
        print(f"   - {self.model_config['requests_per_minute']} –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω—É—Ç—É")
        print(f"   - {self.model_config['requests_per_day']} –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å")
        print(f"üí° –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –¥–ª—è: {self.model_config['recommended_for']}")
        print(f"üìÅ –ü—Ä–æ—Ñ–∏–ª—å –±—Ä–∞—É–∑–µ—Ä–∞: {self.profile_path}")
        print("="*60)


# ==================== –ì–õ–û–ë–ê–õ–¨–ù–´–ô –≠–ö–ó–ï–ú–ü–õ–Ø–† ====================

_app_config = None

def get_app_config() -> AppConfig:
    """–ü–æ–ª—É—á–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (singleton)"""
    global _app_config
    if _app_config is None:
        _app_config = AppConfig()
    return _app_config


# ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

def get_llm():
    """–ü–æ–ª—É—á–∏—Ç—å LLM —Å —É—á—ë—Ç–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config = get_app_config()
    return config.get_llm()


def get_profile_path():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é –±—Ä–∞—É–∑–µ—Ä–∞"""
    config = get_app_config()
    return config.profile_path


def get_rate_limiter() -> RateLimiter:
    """–ü–æ–ª—É—á–∏—Ç—å rate limiter"""
    config = get_app_config()
    return config.rate_limiter


async def wait_for_rate_limit() -> bool:
    """
    –ü–æ–¥–æ–∂–¥–∞—Ç—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limit
    Returns: True –µ—Å–ª–∏ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, False –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç
    """
    rate_limiter = get_rate_limiter()
    return await rate_limiter.wait_if_needed()


def register_api_request():
    """–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π API –∑–∞–ø—Ä–æ—Å"""
    rate_limiter = get_rate_limiter()
    rate_limiter.register_request()


def print_api_stats():
    """–í—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API"""
    rate_limiter = get_rate_limiter()
    rate_limiter.print_stats()


# ==================== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø ====================

if __name__ == "__main__":
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    import sys
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if len(sys.argv) > 1 and sys.argv[1] == "--list":
        ModelConfig.list_models()
        exit(0)
    
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò\n")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        config = get_app_config()
        config.print_config()
        
        # –¢–µ—Å—Ç rate limiter
        print("\nüß™ –¢–µ—Å—Ç Rate Limiter:")
        rate_limiter = get_rate_limiter()
        
        # –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
        for i in range(5):
            can_request, reason = rate_limiter.can_make_request()
            if can_request:
                print(f"‚úÖ –ó–∞–ø—Ä–æ—Å {i+1}: –†–∞–∑—Ä–µ—à—ë–Ω")
                rate_limiter.register_request()
            else:
                print(f"‚õî –ó–∞–ø—Ä–æ—Å {i+1}: {reason}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        rate_limiter.print_stats()
        
        print("\nüí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'python config.py --list' –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π")
        
    except ValueError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\n–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example")

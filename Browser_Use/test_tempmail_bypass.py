"""
üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–•–û–î–ê TEMP-MAIL –ò CLOUDFLARE

–≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –æ—Ç–∫—Ä—ã—Ç–∏–µ–º temp-mail.
"""
import asyncio
from pathlib import Path
from playwright.async_api import async_playwright


async def test_tempmail_access():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è temp-mail —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏"""
    
    print("=" * 70)
    print("üß™ –¢–ï–°–¢ –û–¢–ö–†–´–¢–ò–Ø TEMP-MAIL")
    print("=" * 70)
    
    playwright = await async_playwright().start()
    
    # –ü–æ–ª—É—á–∞–µ–º profile path
    user_data_dir = str(Path.cwd() / "profiles" / "unified_default")
    Path(user_data_dir).mkdir(parents=True, exist_ok=True)
    
    context = await playwright.chromium.launch_persistent_context(
        user_data_dir=user_data_dir,
        headless=False,
        viewport={'width': 1440, 'height': 900},
        locale='ru-RU',
        timezone_id='Europe/Moscow',
        # üïµÔ∏è –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞
        user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
        extra_http_headers={
            'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
            'Accept-Encoding': 'gzip, deflate, br',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        },
        args=['--start-maximized', '--disable-blink-features=AutomationControlled']
    )
    
    page = await context.new_page()
    
    try:
        # –°–¢–†–ê–¢–ï–ì–ò–Ø 1: –ü—Ä–æ—Å—Ç–æ–π goto —Å load
        print("\nüìç –°–¢–†–ê–¢–ï–ì–ò–Ø 1: goto —Å wait_until='load' (15 —Å–µ–∫)")
        print("   –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ https://temp-mail.org/en/")
        
        try:
            await page.goto("https://temp-mail.org/en/", wait_until="load", timeout=15000)
            print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {str(e)[:100]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
        current_url = page.url
        print(f"   üìå –¢–µ–∫—É—â–∏–π URL: {current_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ Cloudflare
        title = await page.title()
        body_text = await page.evaluate("() => document.body ? document.body.innerText.slice(0, 500) : ''")
        
        print(f"   üîç –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title[:60]}")
        print(f"   üìù –¢–µ–∫—Å—Ç (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤): {body_text[:100]}")
        
        if "Attention Required" in title or "Cloudflare" in title:
            print("   üõ°Ô∏è  CLOUDFLARE BLOCK DETECTED!")
            print("   ‚è≥ –ñ–¥—ë–º 15 —Å–µ–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è...")
            await asyncio.sleep(15)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
            title2 = await page.title()
            print(f"   üîç –ü–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è: {title2[:60]}")
        
        # –°–¢–†–ê–¢–ï–ì–ò–Ø 2: –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å email
        print("\nüìç –°–¢–†–ê–¢–ï–ì–ò–Ø 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ email")
        
        try:
            # ‚è≥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ñ–¥—ë–º –ø–æ–∫–∞ email –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –≤ –ø–æ–ª–µ
            # Email –º–æ–∂–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –¥–æ 10 —Å–µ–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            print("   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ email (–¥–æ 15 —Å–µ–∫)...")
            
            email_loaded = False
            for attempt in range(30):  # 30 –ø–æ–ø—ã—Ç–æ–∫ √ó 0.5 —Å–µ–∫ = 15 —Å–µ–∫ –º–∞–∫—Å
                email = await page.evaluate("""() => {
                    const input = document.querySelector('#mail');
                    return input ? input.value : null;
                }""")
                
                if email and email.strip() and '@' in email:
                    print(f"   ‚úÖ EMAIL –ù–ê–ô–î–ï–ù (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}): {email}")
                    email_loaded = True
                    break
                else:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                    if attempt % 2 == 0:
                        print(f"   ‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt+1}/30... (—Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: '{email}')")
                    await asyncio.sleep(0.5)
            
            if not email_loaded:
                print("   ‚ùå Email –ù–ï –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –∑–∞ 15 —Å–µ–∫")
                
                # –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
                print("   üîç –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã...")
                alts = await page.evaluate("""() => {
                    const selectors = [
                        'input[type="email"]', 
                        'input[placeholder*="mail"]', 
                        'input[value*="@"]',
                        'input#email',
                        '[data-testid="email"]'
                    ];
                    for (let sel of selectors) {
                        const el = document.querySelector(sel);
                        if (el && el.value && el.value.includes('@')) {
                            return el.value;
                        }
                    }
                    
                    // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –≤—Å–µ input'—ã
                    const inputs = document.querySelectorAll('input');
                    for (let inp of inputs) {
                        if (inp.value && inp.value.includes('@')) {
                            return inp.value;
                        }
                    }
                    return null;
                }""")
                
                if alts:
                    print(f"   ‚úÖ EMAIL (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä): {alts}")
                else:
                    print("   ‚ö†Ô∏è  Email –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–∞—Ö")
        
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è: {e}")
        
        # –°–¢–†–ê–¢–ï–ì–ò–Ø 3: Screenshot –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        print("\nüìç –°–¢–†–ê–¢–ï–ì–ò–Ø 3: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞")
        
        try:
            screenshot_path = Path("logs") / "test_tempmail_debug.png"
            screenshot_path.parent.mkdir(exist_ok=True)
            
            await page.screenshot(path=str(screenshot_path), full_page=True)
            print(f"   ‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {screenshot_path}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        
        # –û—Å—Ç–∞–≤–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("\n‚è±Ô∏è  –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞—ë—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º 30 —Å–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        await asyncio.sleep(30)
    
    finally:
        await context.close()
        await playwright.stop()
        print("\n‚úÖ –ó–∞–∫—Ä—ã–ª–∏ –±—Ä–∞—É–∑–µ—Ä")


if __name__ == "__main__":
    asyncio.run(test_tempmail_access())

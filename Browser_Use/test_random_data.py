"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ API
"""
import asyncio
import httpx
import json


async def get_random_user_data() -> dict:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ API randomdatatools.ru
    """
    try:
        async with httpx.AsyncClient(timeout=10.0) as client:
            response = await client.get("https://api.randomdatatools.ru/?gender=man")
            response.raise_for_status()
            data = response.json()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è (FirstName + LastName)
            first_name = data.get('FirstName', '–ò–≤–∞–Ω')
            last_name = data.get('LastName', '–ò–≤–∞–Ω–æ–≤')
            full_name = f"{first_name} {last_name}"
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ API –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏
            api_password = data.get('Password', 'default123')
            password = f"{api_password}!@"
            
            # –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —É–∂–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY
            birthdate = data.get('DateOfBirth', '01.01.1990')
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            phone = data.get('Phone', '+7 (900) 000-00-00')
            email = data.get('Email', 'example@mail.ru')
            address = data.get('Address', '–†–æ—Å—Å–∏—è, –≥. –ú–æ—Å–∫–≤–∞')
            city = data.get('City', '–≥. –ú–æ—Å–∫–≤–∞')
            
            user_data = {
                'name': full_name,
                'password': password,
                'birthdate': birthdate,
                'phone': phone,
                'email': email,
                'address': address,
                'city': city,
                'raw_data': data
            }
            
            return user_data
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
        return None


async def main():
    print("=" * 70)
    print("üé≤ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –°–õ–£–ß–ê–ô–ù–´–• –î–ê–ù–ù–´–•")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º 3 —Ä–∞–∑–∞ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–∞–∑–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    for i in range(3):
        print(f"\nüìù –ü–æ–ø—ã—Ç–∫–∞ #{i+1}:")
        print("-" * 70)
        
        user_data = await get_random_user_data()
        
        if user_data:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:")
            print(f"   üë§ –ü–æ–ª–Ω–æ–µ –∏–º—è: {user_data['name']}")
            print(f"   üîë –ü–∞—Ä–æ–ª—å: {user_data['password']}")
            print(f"   üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {user_data['birthdate']}")
            print(f"   üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}")
            print(f"   üìß Email (–∏–∑ API): {user_data['email']}")
            print(f"   üìç –ì–æ—Ä–æ–¥: {user_data['city']}")
            print(f"   üè† –ê–¥—Ä–µ—Å: {user_data['address']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø–æ–ª–µ–π –∏–∑ raw_data
            if user_data['raw_data']:
                rd = user_data['raw_data']
                print(f"\n   üìÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
                print(f"      ‚Ä¢ –ü–∞—Å–ø–æ—Ä—Ç: {rd.get('PasportNum', 'N/A')}")
                print(f"      ‚Ä¢ –ò–ù–ù: {rd.get('inn_fiz', 'N/A')}")
                print(f"      ‚Ä¢ –°–ù–ò–õ–°: {rd.get('snils', 'N/A')}")
                if 'CarBrand' in rd and 'CarModel' in rd:
                    print(f"      ‚Ä¢ –ê–≤—Ç–æ–º–æ–±–∏–ª—å: {rd['CarBrand']} {rd['CarModel']} ({rd.get('CarYear', 'N/A')})")
                if 'bankCard' in rd:
                    print(f"      ‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞: {rd['bankCard']}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        
        if i < 2:  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await asyncio.sleep(1)
    
    print("\n" + "=" * 70)
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω")
    print("=" * 70)


if __name__ == "__main__":
    asyncio.run(main())

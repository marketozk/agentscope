import asyncio
import os
from pathlib import Path
from browser_use import Agent, llm as bu_llm
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å rate limiting
from config import (
    get_app_config,
    get_llm,
    get_profile_path,
    wait_for_rate_limit,
    register_api_request,
    print_api_stats
)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ä—è–¥–æ–º —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º
ENV_PATH = Path(__file__).parent / ".env"
load_dotenv(dotenv_path=ENV_PATH)

async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        config = get_app_config()
        config.print_config()
        
        llm = get_llm()
        profile_path = get_profile_path()
    except ValueError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limit –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not await wait_for_rate_limit():
        print("‚õî –î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = Agent(
        task="–ó–∞–π–¥–∏ –Ω–∞ yandex.ru –∏ –≤–≤–µ–¥–∏ '—Ç–µ—Å—Ç' –≤ –ø–æ–∏—Å–∫",
        llm=llm,
        use_vision=False,
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    register_api_request()
    
    await agent.run()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print_api_stats()

if __name__ == "__main__":
    asyncio.run(main())
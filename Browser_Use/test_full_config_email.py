"""
üß™ –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è temp-mail.org

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π (stealth + headers + user-agent + JS) 
email –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.

–≠—Ç–æ –¢–û–ß–ù–ê–Ø –∫–æ–ø–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ test_agent3_air.py –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.
"""

import asyncio
import re
from playwright.async_api import async_playwright

try:
    from playwright_stealth import Stealth
    stealth_instance = Stealth()
    stealth_async = stealth_instance.apply_stealth_async
    STEALTH_AVAILABLE = True
except ImportError:
    stealth_async = None
    STEALTH_AVAILABLE = False


async def extract_email_with_retries(page, max_attempts=20):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç email —Å –∞–∫—Ç–∏–≤–Ω—ã–º –æ–∂–∏–¥–∞–Ω–∏–µ–º.
    
    Args:
        page: Playwright page
        max_attempts: –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ (20 √ó 0.5s = 10 —Å–µ–∫)
    
    Returns:
        Email –∏–ª–∏ None
    """
    print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è email (–¥–æ {max_attempts * 0.5} —Å–µ–∫)...")
    
    for attempt in range(1, max_attempts + 1):
        email = await page.evaluate('''() => {
            // –°–ø–æ—Å–æ–± 1: –ø—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –≤ #mail
            let input = document.querySelector('#mail');
            if (input && input.value && input.value.includes('@')) {
                return input.value;
            }
            
            // –°–ø–æ—Å–æ–± 2: –ø–æ–∏—Å–∫ –≤—Å–µ—Ö input —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            let inputs = document.querySelectorAll('input');
            for (let inp of inputs) {
                if (inp.value && inp.value.includes('@') && inp.value.includes('.')) {
                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º placeholder'—ã
                    if (!inp.placeholder || !inp.placeholder.includes('@')) {
                        return inp.value;
                    }
                }
            }
            
            // –°–ø–æ—Å–æ–± 3: –ø–æ–∏—Å–∫ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—è—Ö –ø–æ –∫–ª–∞—Å—Å–∞–º
            let elements = document.querySelectorAll('[class*="mail"], [class*="email"], [id*="mail"], [id*="email"]');
            for (let el of elements) {
                if (el.value && el.value.includes('@')) {
                    return el.value;
                }
                if (el.innerText && el.innerText.includes('@')) {
                    return el.innerText;
                }
            }
            
            return null;
        }''')
        
        if email and email.strip() and '@' in email and '.' in email:
            print(f"‚úÖ EMAIL –ù–ê–ô–î–ï–ù –ù–ê –ü–û–ü–´–¢–ö–ï {attempt}: {email}")
            return email
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é 4-—é –ø–æ–ø—ã—Ç–∫—É
        if attempt % 4 == 0:
            print(f"   ... –ø–æ–ø—ã—Ç–∫–∞ {attempt}/{max_attempts} (—Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: '{email}')")
        
        await asyncio.sleep(0.5)
    
    print(f"‚ùå Email –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ {max_attempts * 0.5} —Å–µ–∫")
    return None


async def main():
    print("=" * 70)
    print("üß™ –¢–ï–°–¢ –ü–û–õ–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ë–†–ê–£–ó–ï–†–ê")
    print("=" * 70)
    
    if not STEALTH_AVAILABLE:
        print("‚ö†Ô∏è  playwright-stealth –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! Stealth –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω.")
    
    SCREEN_WIDTH = 1440
    SCREEN_HEIGHT = 900
    
    async with async_playwright() as p:
        print("\nüì¶ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ —Å –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π...")
        
        # –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ test_agent3_air.py
        browser = await p.chromium.launch(
            headless=False, 
            args=[
                '--start-maximized',
                '--disable-blink-features=AutomationControlled'
            ]
        )
        
        # üîß –ü–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        context = await browser.new_context(
            viewport={'width': SCREEN_WIDTH, 'height': SCREEN_HEIGHT},
            locale='ru-RU',
            timezone_id='Europe/Moscow',
            user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
            extra_http_headers={
                'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            },
            java_script_enabled=True,  # –Ø–≤–Ω–æ –≤–∫–ª—é—á–∞–µ–º JS
        )
        
        # üõ°Ô∏è –ü—Ä–∏–º–µ–Ω—è–µ–º stealth
        if stealth_async and STEALTH_AVAILABLE:
            print("üïµÔ∏è  –ü—Ä–∏–º–µ–Ω—è–µ–º playwright-stealth...")
            await stealth_async(context)
        
        page = await context.new_page()
        
        print("üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º temp-mail.org...")
        await page.goto("https://temp-mail.org/en/", wait_until="domcontentloaded")
        await page.wait_for_timeout(2000)  # –î–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ JS
        js_enabled = await page.evaluate("() => typeof document !== 'undefined'")
        print(f"üìã JavaScript –≤–∫–ª—é—á–µ–Ω: {js_enabled}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ user-agent
        user_agent = await page.evaluate("() => navigator.userAgent")
        print(f"üîç User-Agent: {user_agent[:80]}...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ webdriver
        webdriver_hidden = await page.evaluate("() => navigator.webdriver")
        print(f"üõ°Ô∏è  navigator.webdriver: {webdriver_hidden} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False/undefined)")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º email
        email = await extract_email_with_retries(page, max_attempts=20)
        
        if email:
            print("\n" + "=" * 70)
            print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù")
            print("=" * 70)
            print(f"üìß –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π email: {email}")
            print("\n–í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print("\n" + "=" * 70)
            print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù")
            print("=" * 70)
            print("Email –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
            print("\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML
            html = await page.content()
            email_pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
            matches = re.findall(email_pattern, html)
            
            if matches:
                print(f"   –í HTML –Ω–∞–π–¥–µ–Ω—ã email'—ã —á–µ—Ä–µ–∑ regex: {matches}")
            else:
                print("   –í HTML –Ω–µ—Ç email'–æ–≤ (–¥–∞–∂–µ —á–µ—Ä–µ–∑ regex)")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ input —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            inputs_count = await page.evaluate("() => document.querySelectorAll('input').length")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ input —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {inputs_count}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ #mail
            mail_input = await page.query_selector('#mail')
            if mail_input:
                value = await mail_input.input_value()
                print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ #mail input: '{value}'")
            else:
                print("   –≠–ª–µ–º–µ–Ω—Ç #mail –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        print("\nüí§ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º 10 —Å–µ–∫ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        await asyncio.sleep(10)
        
        await browser.close()
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")


if __name__ == "__main__":
    asyncio.run(main())

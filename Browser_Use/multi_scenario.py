"""
–ú–Ω–æ–≥–æ—Å—Ü–µ–Ω–∞—Ä–Ω—ã–π —Å–∫—Ä–∏–ø—Ç Browser-Use + Gemini

–†–µ–∞–ª–∏–∑—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞:
1. –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –Ø–Ω–¥–µ–∫—Å
2. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä
4. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–≤–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã:
- –ï–¥–∏–Ω—ã–π –ø—Ä–æ–º–ø—Ç (single_prompt): –≤—Å—è –∑–∞–¥–∞—á–∞ –≤ –æ–¥–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –ü–æ—à–∞–≥–æ–≤—ã–π (step_by_step): —Ä–∞–∑–±–∏–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —à–∞–≥–∏
"""

import asyncio
import os
from pathlib import Path
from browser_use import Agent, Browser, llm as bu_llm
from dotenv import load_dotenv
from datetime import datetime

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å rate limiting
from config import (
    get_app_config,
    get_llm,
    get_profile_path,
    wait_for_rate_limit,
    register_api_request,
    print_api_stats
)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV_PATH = Path(__file__).parent / ".env"
load_dotenv(dotenv_path=ENV_PATH)


# ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ====================

# –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ config.py
# get_llm() - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç LLM —Å —É—á—ë—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
# get_profile_path() - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é –±—Ä–∞—É–∑–µ—Ä–∞


# ==================== –°–¶–ï–ù–ê–†–ò–ò ====================

class ScenarioRunner:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    
    def __init__(self, llm, profile_path):
        self.llm = llm
        self.profile_path = profile_path
    
    async def run_single_prompt(self, task: str):
        """–†–µ–∂–∏–º: –µ–¥–∏–Ω—ã–π –ø—Ä–æ–º–ø—Ç"""
        print(f"\n{'='*60}")
        print(f"üöÄ –†–ï–ñ–ò–ú: –ï–¥–∏–Ω—ã–π –ø—Ä–æ–º–ø—Ç")
        print(f"üìã –ó–ê–î–ê–ß–ê: {task}")
        print(f"{'='*60}\n")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limit
        if not await wait_for_rate_limit():
            print("‚õî –î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return None
        
        agent = Agent(
            task=task,
            llm=self.llm,
            use_vision=False,
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
        register_api_request()
        
        result = await agent.run()
        return result
    
    async def run_step_by_step(self, steps: list):
        """–†–µ–∂–∏–º: –ø–æ—à–∞–≥–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ"""
        print(f"\n{'='*60}")
        print(f"üöÄ –†–ï–ñ–ò–ú: –ü–æ—à–∞–≥–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
        print(f"üìã –®–ê–ì–û–í: {len(steps)}")
        print(f"{'='*60}\n")
        
        results = []
        for i, step in enumerate(steps, 1):
            print(f"\n--- –®–∞–≥ {i}/{len(steps)} ---")
            print(f"üìå {step}")
            
            # –û–∂–∏–¥–∞–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limit
            if not await wait_for_rate_limit():
                print("‚õî –î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç API. –û—Å—Ç–∞–Ω–æ–≤–∫–∞.")
                break
            
            agent = Agent(
                task=step,
                llm=self.llm,
                use_vision=False,
            )
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
            register_api_request()
            
            result = await agent.run()
            results.append(result)
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
            if i < len(steps):
                await asyncio.sleep(2)
        
        return results


# ==================== –°–¶–ï–ù–ê–†–ò–ô 1: –ü–û–ò–°–ö –ù–û–í–û–°–¢–ï–ô ====================

class NewsSearchScenario(ScenarioRunner):
    """–ü–æ–∏—Å–∫ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    
    async def run(self, query: str, mode: str = "single_prompt"):
        print(f"\n{'#'*60}")
        print(f"üì∞ –°–¶–ï–ù–ê–†–ò–ô: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π")
        print(f"üîç –ó–∞–ø—Ä–æ—Å: {query}")
        print(f"{'#'*60}")
        
        if mode == "single_prompt":
            task = f"""
            1. –û—Ç–∫—Ä–æ–π yandex.ru/news
            2. –ù–∞–π–¥–∏ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É "{query}"
            3. –û—Ç–∫—Ä–æ–π –ø–µ—Ä–≤—É—é –Ω–æ–≤–æ—Å—Ç—å –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            4. –ü—Ä–æ—á–∏—Ç–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–µ—Ä–≤—ã–π –∞–±–∑–∞—Ü –Ω–æ–≤–æ—Å—Ç–∏
            5. –°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            """
            return await self.run_single_prompt(task)
        
        elif mode == "step_by_step":
            steps = [
                "–û—Ç–∫—Ä–æ–π —Å–∞–π—Ç yandex.ru/news",
                f"–í–≤–µ–¥–∏ –≤ –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞–ø—Ä–æ—Å '{query}' –∏ –Ω–∞–∂–º–∏ Enter",
                "–ù–∞–π–¥–∏ –∏ –æ—Ç–∫—Ä–æ–π –ø–µ—Ä–≤—É—é –Ω–æ–≤–æ—Å—Ç—å –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞",
                "–ü—Ä–æ—á–∏—Ç–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ –∞–±–∑–∞—Ü–∞ —Ç–µ–∫—Å—Ç–∞",
            ]
            return await self.run_step_by_step(steps)


# ==================== –°–¶–ï–ù–ê–†–ò–ô 2: –§–û–†–ú–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ====================

class RegistrationScenario(ScenarioRunner):
    """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    async def run(self, user_data: dict, mode: str = "single_prompt"):
        print(f"\n{'#'*60}")
        print(f"üìù –°–¶–ï–ù–ê–†–ò–ô: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print(f"üë§ –ò–º—è: {user_data.get('name', 'N/A')}")
        print(f"{'#'*60}")
        
        if mode == "single_prompt":
            task = f"""
            1. –û—Ç–∫—Ä–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∞–π—Ç –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏: https://demoqa.com/automation-practice-form
            2. –ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É —Å–ª–µ–¥—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:
               - First Name: {user_data.get('first_name', 'Test')}
               - Last Name: {user_data.get('last_name', 'User')}
               - Email: {user_data.get('email', 'test@example.com')}
               - Mobile: {user_data.get('mobile', '1234567890')}
               - Gender: {user_data.get('gender', 'Male')}
            3. –ü—Ä–æ–∫—Ä—É—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–Ω–∏–∑ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –ø–æ–ª—è
            4. –ù–ï –Ω–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É Submit
            """
            return await self.run_single_prompt(task)
        
        elif mode == "step_by_step":
            steps = [
                "–û—Ç–∫—Ä–æ–π —Å–∞–π—Ç https://demoqa.com/automation-practice-form",
                f"–ó–∞–ø–æ–ª–Ω–∏ –ø–æ–ª–µ First Name –∑–Ω–∞—á–µ–Ω–∏–µ–º {user_data.get('first_name', 'Test')}",
                f"–ó–∞–ø–æ–ª–Ω–∏ –ø–æ–ª–µ Last Name –∑–Ω–∞—á–µ–Ω–∏–µ–º {user_data.get('last_name', 'User')}",
                f"–ó–∞–ø–æ–ª–Ω–∏ –ø–æ–ª–µ Email –∑–Ω–∞—á–µ–Ω–∏–µ–º {user_data.get('email', 'test@example.com')}",
                f"–í—ã–±–µ—Ä–∏ Gender: {user_data.get('gender', 'Male')}",
                f"–ó–∞–ø–æ–ª–Ω–∏ –ø–æ–ª–µ Mobile Number –∑–Ω–∞—á–µ–Ω–∏–µ–º {user_data.get('mobile', '1234567890')}",
                "–ü—Ä–æ–∫—Ä—É—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–Ω–∏–∑ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è",
            ]
            return await self.run_step_by_step(steps)


# ==================== –°–¶–ï–ù–ê–†–ò–ô 3: –ú–û–ù–ò–¢–û–†–ò–ù–ì –¶–ï–ù ====================

class PriceMonitoringScenario(ScenarioRunner):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä—ã"""
    
    async def run(self, product: str, mode: str = "single_prompt"):
        print(f"\n{'#'*60}")
        print(f"üí∞ –°–¶–ï–ù–ê–†–ò–ô: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω")
        print(f"üõçÔ∏è –¢–æ–≤–∞—Ä: {product}")
        print(f"{'#'*60}")
        
        if mode == "single_prompt":
            task = f"""
            1. –û—Ç–∫—Ä–æ–π market.yandex.ru
            2. –ù–∞–π–¥–∏ —Ç–æ–≤–∞—Ä "{product}"
            3. –û—Ç–∫—Ä–æ–π –∫–∞—Ä—Ç–æ—á–∫—É –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            4. –ù–∞–π–¥–∏ –∏ –∑–∞–ø–æ–º–Ω–∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
            5. –ù–∞–π–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –µ–≥–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            """
            return await self.run_single_prompt(task)
        
        elif mode == "step_by_step":
            steps = [
                "–û—Ç–∫—Ä–æ–π —Å–∞–π—Ç market.yandex.ru",
                f"–í–≤–µ–¥–∏ –≤ –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä '{product}'",
                "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞ –∏–ª–∏ Enter",
                "–û—Ç–∫—Ä–æ–π –∫–∞—Ä—Ç–æ—á–∫—É –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
                "–ù–∞–π–¥–∏ –∏ –ø—Ä–æ—á–∏—Ç–∞–π —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞",
                "–ù–∞–π–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –µ–≥–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏",
            ]
            return await self.run_step_by_step(steps)


# ==================== –°–¶–ï–ù–ê–†–ò–ô 4: –†–ê–ë–û–¢–ê –° –í–ò–ö–ò–ü–ï–î–ò–ï–ô ====================

class WikipediaScenario(ScenarioRunner):
    """–ü–æ–∏—Å–∫ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –í–∏–∫–∏–ø–µ–¥–∏–∏"""
    
    async def run(self, topic: str, mode: str = "single_prompt"):
        print(f"\n{'#'*60}")
        print(f"üìö –°–¶–ï–ù–ê–†–ò–ô: –ü–æ–∏—Å–∫ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏")
        print(f"üìñ –¢–µ–º–∞: {topic}")
        print(f"{'#'*60}")
        
        if mode == "single_prompt":
            task = f"""
            1. –û—Ç–∫—Ä–æ–π ru.wikipedia.org
            2. –ù–∞–π–¥–∏ —Å—Ç–∞—Ç—å—é –ø–æ —Ç–µ–º–µ "{topic}"
            3. –ü—Ä–æ—á–∏—Ç–∞–π –ø–µ—Ä–≤—ã–π –∞–±–∑–∞—Ü —Å—Ç–∞—Ç—å–∏ (–≤–≤–µ–¥–µ–Ω–∏–µ)
            4. –ù–∞–π–¥–∏ –∏ –ø—Ä–æ—á–∏—Ç–∞–π —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ (–æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ) —Å—Ç–∞—Ç—å–∏
            5. –ü—Ä–æ–∫—Ä—É—Ç–∏ –¥–æ —Ä–∞–∑–¥–µ–ª–∞ "–ò—Å—Ç–æ—Ä–∏—è" –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            """
            return await self.run_single_prompt(task)
        
        elif mode == "step_by_step":
            steps = [
                "–û—Ç–∫—Ä–æ–π —Å–∞–π—Ç ru.wikipedia.org",
                f"–í–≤–µ–¥–∏ –≤ –ø–æ–∏—Å–∫ —Ç–µ–º—É '{topic}' –∏ –Ω–∞–∂–º–∏ Enter",
                "–ü—Ä–æ—á–∏—Ç–∞–π –ø–µ—Ä–≤—ã–π –∞–±–∑–∞—Ü —Å—Ç–∞—Ç—å–∏ (–≤–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º)",
                "–ù–∞–π–¥–∏ –±–ª–æ–∫ '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ' –∏ –ø—Ä–æ—á–∏—Ç–∞–π —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤",
                "–ü—Ä–æ–∫—Ä—É—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –Ω–∞–π–¥–∏ —Ä–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—Ä–∏—è' –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            ]
            return await self.run_step_by_step(steps)


# ==================== –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ====================

async def show_menu_and_run():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    
    print("\n" + "="*60)
    print("ü§ñ BROWSER-USE + GEMINI: –ú–Ω–æ–≥–æ—Å—Ü–µ–Ω–∞—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫")
    print("="*60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –≤—ã–≤–æ–¥–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        config = get_app_config()
        config.print_config()
        
        llm = get_llm()
        profile_path = get_profile_path()
    except ValueError as e:
        print(f"\n{e}")
        return
    
    # –í—ã–±–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è
    print("\n" + "-"*60)
    print("üìã –î–û–°–¢–£–ü–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò:")
    print("-"*60)
    print("1. üì∞ –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –Ø–Ω–¥–µ–∫—Å")
    print("2. üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (DemoQA)")
    print("3. üí∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä (–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç)")
    print("4. üìö –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏")
    print("0. ‚ùå –í—ã—Ö–æ–¥")
    
    choice = input("\nüëâ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π (0-4): ").strip()
    
    if choice == "0":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        return
    
    # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
    print("\n" + "-"*60)
    print("‚öôÔ∏è –†–ï–ñ–ò–ú –í–´–ü–û–õ–ù–ï–ù–ò–Ø:")
    print("-"*60)
    print("1. üéØ –ï–¥–∏–Ω—ã–π –ø—Ä–æ–º–ø—Ç (–≤—Å—è –∑–∞–¥–∞—á–∞ —Å—Ä–∞–∑—É)")
    print("2. üë£ –ü–æ—à–∞–≥–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (–∫–∞–∂–¥—ã–π —à–∞–≥ –æ—Ç–¥–µ–ª—å–Ω–æ)")
    
    mode_choice = input("\nüëâ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1-2): ").strip()
    mode = "single_prompt" if mode_choice == "1" else "step_by_step"
    
    # –ó–∞–ø—É—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
    print(f"\n‚è≥ –ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è...")
    
    try:
        if choice == "1":
            # –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
            query = input("\nüîç –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (–∏–ª–∏ Enter –¥–ª—è '–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç'): ").strip()
            query = query or "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"
            
            scenario = NewsSearchScenario(llm, profile_path)
            result = await scenario.run(query, mode)
            
        elif choice == "2":
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            print("\nüë§ –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∏–ª–∏ Enter –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö):")
            first_name = input("  First Name: ").strip() or "–ò–≤–∞–Ω"
            last_name = input("  Last Name: ").strip() or "–¢–µ—Å—Ç–æ–≤"
            email = input("  Email: ").strip() or "ivan.testov@example.com"
            mobile = input("  Mobile (10 —Ü–∏—Ñ—Ä): ").strip() or "9001234567"
            
            print("\n  Gender:")
            print("    1. Male")
            print("    2. Female")
            print("    3. Other")
            gender_choice = input("  –í—ã–±–æ—Ä (1-3): ").strip()
            gender = {"1": "Male", "2": "Female", "3": "Other"}.get(gender_choice, "Male")
            
            user_data = {
                "first_name": first_name,
                "last_name": last_name,
                "email": email,
                "mobile": mobile,
                "gender": gender
            }
            
            scenario = RegistrationScenario(llm, profile_path)
            result = await scenario.run(user_data, mode)
            
        elif choice == "3":
            # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω
            product = input("\nüõçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–∏–ª–∏ Enter –¥–ª—è 'iPhone 15'): ").strip()
            product = product or "iPhone 15"
            
            scenario = PriceMonitoringScenario(llm, profile_path)
            result = await scenario.run(product, mode)
            
        elif choice == "4":
            # –í–∏–∫–∏–ø–µ–¥–∏—è
            topic = input("\nüìñ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞ (–∏–ª–∏ Enter –¥–ª—è 'Python'): ").strip()
            topic = topic or "Python (—è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è)"
            
            scenario = WikipediaScenario(llm, profile_path)
            result = await scenario.run(topic, mode)
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è!")
            return
        
        print("\n" + "="*60)
        print("‚úÖ –°–¶–ï–ù–ê–†–ò–ô –ó–ê–í–ï–†–®–Å–ù!")
        print("="*60)
        print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
        
        # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API
        print_api_stats()
        
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
        if result:
            print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
            print(result)
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()


# ==================== –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö (–ë–ï–ó –ú–ï–ù–Æ) ====================

async def quick_run_example():
    """–ü—Ä–∏–º–µ—Ä –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–µ–∑ –º–µ–Ω—é"""
    
    print("\nüöÄ –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö: –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n")
    
    try:
        llm = get_llm()
        profile_path = get_profile_path()
        
        # –ü—Ä–∏–º–µ—Ä 1: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π (–µ–¥–∏–Ω—ã–π –ø—Ä–æ–º–ø—Ç)
        print("\n" + "="*60)
        print("–ü–†–ò–ú–ï–† 1: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π (–µ–¥–∏–Ω—ã–π –ø—Ä–æ–º–ø—Ç)")
        print("="*60)
        
        scenario = NewsSearchScenario(llm, profile_path)
        await scenario.run("–∫–æ—Å–º–æ—Å", mode="single_prompt")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
        await asyncio.sleep(3)
        
        # –ü—Ä–∏–º–µ—Ä 2: –í–∏–∫–∏–ø–µ–¥–∏—è (–ø–æ—à–∞–≥–æ–≤—ã–π)
        print("\n" + "="*60)
        print("–ü–†–ò–ú–ï–† 2: –í–∏–∫–∏–ø–µ–¥–∏—è (–ø–æ—à–∞–≥–æ–≤—ã–π)")
        print("="*60)
        
        scenario = WikipediaScenario(llm, profile_path)
        await scenario.run("–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", mode="step_by_step")
        
        print("\n‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()


# ==================== –¢–û–ß–ö–ê –í–•–û–î–ê ====================

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    import sys
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        if sys.argv[1] == "--quick":
            # –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
            await quick_run_example()
        elif sys.argv[1] == "--help":
            print("""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë  Browser-Use + Gemini: –ú–Ω–æ–≥–æ—Å—Ü–µ–Ω–∞—Ä–Ω—ã–π —Å–∫—Ä–∏–ø—Ç               ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
  python multi_scenario.py           - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
  python multi_scenario.py --quick   - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
  python multi_scenario.py --help    - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

–°–¶–ï–ù–ê–†–ò–ò:
  1. –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –Ø–Ω–¥–µ–∫—Å
  2. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (DemoQA)
  3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä (–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç)
  4. –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏

–†–ï–ñ–ò–ú–´:
  - –ï–¥–∏–Ω—ã–π –ø—Ä–æ–º–ø—Ç: –≤—Å—è –∑–∞–¥–∞—á–∞ –≤ –æ–¥–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  - –ü–æ—à–∞–≥–æ–≤—ã–π: —Ä–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —à–∞–≥–∏ —Å –ø–∞—É–∑–∞–º–∏

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
  1. –°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª —Å GOOGLE_API_KEY
  2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt
  3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä—ã: python -m playwright install
            """)
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: {sys.argv[1]}")
            print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        await show_menu_and_run()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

Давайте интегрируем систему самообучения (self-learning) в существующий скрипт Browser_Use/test_agent3_air.py для автоматической регистрации на Airtable.

Задача: создать слой самообучения, который:
- Сохраняет историю успешных и неуспешных действий
- Адаптирует параметры (таймауты, стратегии навигации, порядок методов извлечения)
- Использует SQLite для хранения опыта между запусками
- Применяет epsilon-greedy стратегию для баланса exploitation/exploration
- Логирует все действия с метриками производительности

Критически важно:
- Не менять существующую архитектуру и внешние интерфейсы функций
- Интеграция должна быть точечной ("drop-in")
- Система должна работать сразу, без дополнительной настройки
- Все изменения должны быть обратимыми

Контекст существующего скрипта test_agent3_air.py:
- Использует Playwright для браузерной автоматизации
- Взаимодействует с Google Gemini Computer Use API для генерации действий
- Выполняет регистрацию через temp-mail.org и airtable.com
- Имеет функции: execute_computer_use_action, safe_screenshot, extract_email_from_tempmail_page, extract_verification_link_from_page
- Основная функция: main_airtable_registration_unified

Требуется полное техническое решение с готовым кодом для интеграции.

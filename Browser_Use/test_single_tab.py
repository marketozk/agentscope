"""
üß™ –¢–µ—Å—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∫–ª–∞–¥–æ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –¢–û–õ–¨–ö–û –û–î–ù–ê –≤–∫–ª–∞–¥–∫–∞.
"""

import asyncio
from playwright.async_api import async_playwright

try:
    from playwright_stealth import Stealth
    stealth_instance = Stealth()
    stealth_async = stealth_instance.apply_stealth_async
    STEALTH_AVAILABLE = True
except ImportError:
    stealth_async = None
    STEALTH_AVAILABLE = False


async def main():
    print("=" * 70)
    print("üß™ –¢–ï–°–¢ –ö–û–õ–ò–ß–ï–°–¢–í–ê –í–ö–õ–ê–î–û–ö")
    print("=" * 70)
    
    SCREEN_WIDTH = 1440
    SCREEN_HEIGHT = 900
    
    async with async_playwright() as p:
        print("\nüì¶ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
        
        browser = await p.chromium.launch(
            headless=False, 
            args=[
                '--start-maximized',
                '--disable-blink-features=AutomationControlled'
            ]
        )
        
        context = await browser.new_context(
            viewport={'width': SCREEN_WIDTH, 'height': SCREEN_HEIGHT},
            locale='ru-RU',
            timezone_id='Europe/Moscow',
            user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
            extra_http_headers={
                'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            },
            java_script_enabled=True,
        )
        
        if stealth_async and STEALTH_AVAILABLE:
            print("üïµÔ∏è  –ü—Ä–∏–º–µ–Ω—è–µ–º playwright-stealth...")
            await stealth_async(context)
        
        # üéØ –ü–†–û–í–ï–†–ö–ê: –°–∫–æ–ª—å–∫–æ –≤–∫–ª–∞–¥–æ–∫ —Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏?
        pages_before = context.pages
        print(f"\nüìä –í–∫–ª–∞–¥–æ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {len(pages_before)}")
        
        # üéØ –ò–°–ü–û–õ–¨–ó–£–ï–ú —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É
        if pages_before:
            page = pages_before[0]
            print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É")
        else:
            page = await context.new_page()
            print(f"üìÑ –°–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É (–Ω–µ –±—ã–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö)")
        
        pages_after = context.pages
        print(f"üìä –í–∫–ª–∞–¥–æ–∫ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è page: {len(pages_after)}")
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º temp-mail
        print("\nüåê –û—Ç–∫—Ä—ã–≤–∞–µ–º temp-mail.org...")
        await page.goto("https://temp-mail.org/en/", wait_until="domcontentloaded")
        await page.wait_for_timeout(2000)
        
        pages_final = context.pages
        print(f"üìä –í–∫–ª–∞–¥–æ–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∞–π—Ç–∞: {len(pages_final)}")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("\n" + "=" * 70)
        if len(pages_final) == 1:
            print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û—Ç–∫—Ä—ã—Ç–∞ –¢–û–õ–¨–ö–û –û–î–ù–ê –≤–∫–ª–∞–¥–∫–∞")
        else:
            print(f"‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –û—Ç–∫—Ä—ã—Ç–æ {len(pages_final)} –≤–∫–ª–∞–¥–æ–∫")
            print("\nüìã –°–ø–∏—Å–æ–∫ –≤–∫–ª–∞–¥–æ–∫:")
            for i, p in enumerate(pages_final, 1):
                url = p.url
                print(f"   {i}. {url}")
        print("=" * 70)
        
        print("\nüí§ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º 10 —Å–µ–∫ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        await asyncio.sleep(10)
        
        await browser.close()
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")


if __name__ == "__main__":
    asyncio.run(main())

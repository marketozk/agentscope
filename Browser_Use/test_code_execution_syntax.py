"""
–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Code Execution Tool
"""
import google.generativeai as genai
from google.generativeai.types import Tool
from google.generativeai.types import content_types
import inspect

print("=" * 70)
print("üîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï content_types.FunctionLibraryType")
print("=" * 70)

# –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ç–∞–∫–æ–µ FunctionLibraryType
print(f"\nüìö content_types.FunctionLibraryType:")
try:
    print(f"   –¢–∏–ø: {content_types.FunctionLibraryType}")
    print(f"   –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {inspect.getdoc(content_types.FunctionLibraryType)}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ—É–Ω–∫—Ü–∏—é to_function_library
print(f"\nüîß content_types.to_function_library:")
try:
    sig = inspect.signature(content_types.to_function_library)
    print(f"   –°–∏–≥–Ω–∞—Ç—É—Ä–∞: {sig}")
    print(f"   –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {inspect.getdoc(content_types.to_function_library)}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å Tool —Å code_execution
print(f"\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ó–ù–´–• –í–ê–†–ò–ê–ù–¢–û–í:")
print(f"\n1Ô∏è‚É£ –í–∞—Ä–∏–∞–Ω—Ç: Tool(code_execution=True)")
try:
    tool1 = Tool(code_execution=True)
    print(f"   ‚úÖ –£—Å–ø–µ—Ö! –¢–∏–ø: {type(tool1)}")
    print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {tool1}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")

print("\n2Ô∏è‚É£ –í–∞—Ä–∏–∞–Ω—Ç: Tool(code_execution={})")
try:
    tool2 = Tool(code_execution={})
    print(f"   ‚úÖ –£—Å–ø–µ—Ö! –¢–∏–ø: {type(tool2)}")
    print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {tool2}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")

print(f"\n3Ô∏è‚É£ –í–∞—Ä–∏–∞–Ω—Ç: [Tool(code_execution=True)]")
try:
    tools_list = [Tool(code_execution=True)]
    print(f"   ‚úÖ –£—Å–ø–µ—Ö! –¢–∏–ø: {type(tools_list)}")
    print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {tools_list}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")

# –ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–¥–∞—Ç—å –≤ GenerativeModel
print(f"\n4Ô∏è‚É£ –í–∞—Ä–∏–∞–Ω—Ç: GenerativeModel(..., tools=[Tool(code_execution=True)])")
try:
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash-exp",
        tools=[Tool(code_execution=True)]
    )
    print(f"   ‚úÖ –£–°–ü–ï–•! –ú–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞!")
    print(f"   –¢–∏–ø –º–æ–¥–µ–ª–∏: {type(model)}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")

print("\n5Ô∏è‚É£ –í–∞—Ä–∏–∞–Ω—Ç: GenerativeModel(..., tools={'code_execution': True})")
try:
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash-exp",
        tools={'code_execution': True}
    )
    print(f"   ‚úÖ –£–°–ü–ï–•! –ú–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞!")
    print(f"   –¢–∏–ø –º–æ–¥–µ–ª–∏: {type(model)}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")

print("\n6Ô∏è‚É£ –í–∞—Ä–∏–∞–Ω—Ç: GenerativeModel(..., tools=[{'code_execution': {}}])")
try:
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash-exp",
        tools=[{'code_execution': {}}]
    )
    print(f"   ‚úÖ –£–°–ü–ï–•! –ú–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞!")
    print(f"   –¢–∏–ø –º–æ–¥–µ–ª–∏: {type(model)}")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")

print("\n" + "=" * 70)

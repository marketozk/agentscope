"""
üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å email —Å –Ω–∞—à–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π

–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç - —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏, –±–µ–∑ –¥–æ–ª–≥–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π
"""

import asyncio
from playwright.async_api import async_playwright
from playwright_stealth import Stealth

async def quick_visibility_test():
    print("=" * 70)
    print("üéØ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –í–ò–î–ò–ú–û–°–¢–ò EMAIL")
    print("=" * 70)
    
    stealth = Stealth()
    
    # –¢–ï–°–¢: –° –Ω–∞—à–µ–π –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π (stealth + headers)
    print("\nüîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: stealth + headers + user-agent (–∫–∞–∫ –≤ test_agent3_air.py)")
    print("-" * 70)
    
    async with async_playwright() as p:
        browser = await p.chromium.launch(
            headless=False,
            args=['--start-maximized', '--disable-blink-features=AutomationControlled']
        )
        
        context = await browser.new_context(
            viewport={'width': 1440, 'height': 900},
            locale='ru-RU',
            timezone_id='Europe/Moscow',
            user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
            extra_http_headers={
                'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
                'Accept-Encoding': 'gzip, deflate, br',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                'Cache-Control': 'max-age=0',
            }
        )
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º stealth
        print("üïµÔ∏è  –ü—Ä–∏–º–µ–Ω—è–µ–º stealth...")
        await stealth.apply_stealth_async(context)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ headers
        await context.set_extra_http_headers({
            'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
            'Sec-Fetch-Dest': 'document',
            'Sec-Fetch-Mode': 'navigate',
            'Sec-Fetch-Site': 'none',
            'Sec-Fetch-User': '?1',
        })
        print("üìã Headers —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        page = await context.new_page()
        
        print("\nüåê –û—Ç–∫—Ä—ã–≤–∞–µ–º temp-mail.org...")
        try:
            await page.goto("https://temp-mail.org/en/", wait_until="domcontentloaded", timeout=30000)
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {str(e)[:100]}")
        
        # –ñ–¥—ë–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é email —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        print("\n‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ email...")
        for attempt in range(20):  # 20 –ø–æ–ø—ã—Ç–æ–∫ √ó 1 —Å–µ–∫ = 20 —Å–µ–∫ –º–∞–∫—Å
            email = await page.evaluate("""
                document.querySelector('#mail')?.value || null
            """)
            
            if email and '@' in email:
                print(f"\n‚úÖ EMAIL –ù–ê–ô–î–ï–ù –ù–ê –ü–û–ü–´–¢–ö–ï {attempt + 1}: {email}")
                break
            
            if attempt % 5 == 0 and attempt > 0:
                print(f"   ... –ø–æ–ø—ã—Ç–∫–∞ {attempt}/20")
            
            await asyncio.sleep(1)
        else:
            print("\n‚ùå EMAIL –ù–ï –ü–û–Ø–í–ò–õ–°–Ø –ó–ê 20 –°–ï–ö–£–ù–î")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
            debug_info = await page.evaluate("""() => {
                const input = document.querySelector('#mail');
                return {
                    input_exists: !!input,
                    input_value: input ? input.value : null,
                    placeholder: input ? input.placeholder : null,
                    html_length: document.body.innerHTML.length,
                    readyState: document.readyState
                };
            }""")
            
            print(f"\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:")
            print(f"   Input —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {debug_info['input_exists']}")
            print(f"   Input value: {debug_info['input_value']}")
            print(f"   Placeholder: {debug_info['placeholder']}")
            print(f"   HTML size: {debug_info['html_length']}")
            print(f"   Ready state: {debug_info['readyState']}")
        
        print("\nüí§ –î–µ—Ä–∂–∏–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º 10 —Å–µ–∫ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        print("   üëÅÔ∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∏–∑—É–∞–ª—å–Ω–æ - –≤–∏–¥–Ω–∞ –ª–∏ –ø–æ—á—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ?")
        await asyncio.sleep(10)
        
        await browser.close()
    
    print("\n" + "=" * 70)
    print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–Å–ù")
    print("=" * 70)

if __name__ == "__main__":
    try:
        asyncio.run(quick_visibility_test())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

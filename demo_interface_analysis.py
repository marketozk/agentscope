"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∞–Ω–∞–ª–∏–∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""
import asyncio
import os
from src.intelligent_agent import IntelligentRegistrationAgent

async def demo_interface_analysis():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
    from dotenv import load_dotenv
    load_dotenv()
    
    api_key = os.getenv('GOOGLE_API_KEY') or os.getenv('GEMINI_API_KEY')
    if not api_key:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω GOOGLE_API_KEY –∏–ª–∏ GEMINI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = IntelligentRegistrationAgent(api_key)
    
    # –ü—Ä–∏–º–µ—Ä—ã URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_urls = [
        "https://example.com/register",
        "https://httpbin.org/forms/post",
        "https://www.google.com/accounts/signup",
    ]
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ URL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")
    for i, url in enumerate(test_urls, 1):
        print(f"{i}. {url}")
    print("4. –í–≤–µ—Å—Ç–∏ —Å–≤–æ–π URL")
    
    try:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ (1-4): ").strip()
        
        if choice == "4":
            url = input("–í–≤–µ–¥–∏—Ç–µ URL: ").strip()
        elif choice in ["1", "2", "3"]:
            url = test_urls[int(choice) - 1]
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            return
        
        print(f"\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {url}")
        print("-" * 50)
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
        success = await agent.execute(url)
        
        if success:
            print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ùå –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏")
            
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    asyncio.run(demo_interface_analysis())

if __name__ == "__main__":
    main()

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.
"""

import os
import sys
from pathlib import Path


def check_api_key():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è OPENAI_API_KEY"""
    api_key = os.environ.get("OPENAI_API_KEY")
    if not api_key or api_key == "your-api-key-here":
        return False, "‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    if not api_key.startswith("sk-"):
        return False, "‚ö†Ô∏è  OPENAI_API_KEY –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
    return True, f"‚úÖ OPENAI_API_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ({api_key[:10]}...)"


def check_venv():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    venv_python = Path(".venv/Scripts/python.exe")
    if not venv_python.exists():
        return False, "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .venv –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    return True, "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ"


def check_coolprompt():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è coolprompt_repo"""
    coolprompt_dir = Path("coolprompt_repo")
    if not coolprompt_dir.exists():
        return False, "‚ùå –ü–∞–ø–∫–∞ coolprompt_repo –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    assistant_file = coolprompt_dir / "coolprompt" / "assistant.py"
    if not assistant_file.exists():
        return False, "‚ùå coolprompt/assistant.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    return True, "‚úÖ coolprompt_repo –Ω–∞–π–¥–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"


def check_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    files = {
        "–ü—Ä–æ–º–ø—Ç": "price_analysis_prompt.txt",
        "–°–∫—Ä–∏–ø—Ç –∞–Ω–∞–ª–∏–∑–∞": "analyze_pricing_issue.py",
        "Bat-—Ñ–∞–π–ª": "run_pricing_analysis.bat",
        "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è": "PRICING_ANALYSIS_INSTRUCTION.md"
    }
    
    results = []
    all_ok = True
    
    for name, filename in files.items():
        filepath = Path(filename)
        if filepath.exists():
            results.append((True, f"‚úÖ {name}: {filename}"))
        else:
            results.append((False, f"‚ùå {name}: {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω"))
            all_ok = False
    
    return all_ok, results


def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"""
    try:
        import langchain_openai
        import nltk
        return True, "‚úÖ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    except ImportError as e:
        return False, f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–∞–∫–µ—Ç–æ–≤: {e}"


def main():
    print("=" * 80)
    print("–ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´ –ê–ù–ê–õ–ò–ó–ê –ü–†–û–ë–õ–ï–ú–´ –° –¶–ï–ù–û–û–ë–†–ê–ó–û–í–ê–ù–ò–ï–ú")
    print("=" * 80)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ OPENAI_API_KEY...")
    ok, msg = check_api_key()
    print(f"   {msg}")
    if not ok:
        print("   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: set OPENAI_API_KEY=sk-–≤–∞—à-–∫–ª—é—á-–∑–¥–µ—Å—å")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    venv_ok, msg = check_venv()
    print(f"   {msg}")
    if not venv_ok:
        print("   üí° –°–æ–∑–¥–∞–π—Ç–µ: python -m venv .venv")
        print("   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: .venv\\Scripts\\pip.exe install -r requirements.txt")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ coolprompt
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ coolprompt_repo...")
    cp_ok, msg = check_coolprompt()
    print(f"   {msg}")
    if not cp_ok:
        print("   üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ coolprompt_repo –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    files_ok, results = check_files()
    for ok, msg in results:
        print(f"   {msg}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...")
    req_ok, msg = check_requirements()
    print(f"   {msg}")
    if not req_ok:
        print("   üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: .venv\\Scripts\\pip.exe install -r requirements.txt")
    print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print("=" * 80)
    all_ok = ok and venv_ok and cp_ok and files_ok and req_ok
    
    if all_ok:
        print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print()
        print("üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print()
        print("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   run_pricing_analysis.bat")
        print()
        print("–ò–ª–∏:")
        print("   .venv\\Scripts\\python.exe analyze_pricing_issue.py")
        print("=" * 80)
        return 0
    else:
        print("‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        print()
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞:")
        print("   .venv\\Scripts\\python.exe check_readiness.py")
        print("=" * 80)
        return 1


if __name__ == "__main__":
    sys.exit(main())

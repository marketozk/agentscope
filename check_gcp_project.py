#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ Google Cloud Project –∏ API –∫–ª—é—á–∞
"""
import os
import json
import base64
from pathlib import Path

def check_env_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö"""
    print("üîç –ü–†–û–í–ï–†–ö–ê 1: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    print("-" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    gemini_key = os.getenv('GEMINI_API_KEY')
    google_key = os.getenv('GOOGLE_API_KEY')
    
    print(f"üìå GEMINI_API_KEY: {('‚úÖ –ù–ê–ô–î–ï–ù' if gemini_key else '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')}")
    if gemini_key:
        print(f"   –ü–µ—Ä–≤—ã–µ 20 —Å–∏–º–≤–æ–ª–æ–≤: {gemini_key[:20]}...")
    
    print(f"üìå GOOGLE_API_KEY: {('‚úÖ –ù–ê–ô–î–ï–ù' if google_key else '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')}")
    if google_key:
        print(f"   –ü–µ—Ä–≤—ã–µ 20 —Å–∏–º–≤–æ–ª–æ–≤: {google_key[:20]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_paths = [
        Path(".env"),
        Path("Browser_Use/.env"),
        Path("src/.env"),
    ]
    
    print("\nüîç –ü–†–û–í–ï–†–ö–ê 2: –ü–æ–∏—Å–∫ .env —Ñ–∞–π–ª–æ–≤")
    print("-" * 60)
    for env_path in env_paths:
        if env_path.exists():
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {env_path}")
            try:
                with open(env_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                    if 'GEMINI_API_KEY' in content or 'GOOGLE_API_KEY' in content:
                        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç API –∫–ª—é—á–∏ ‚úì")
                        for line in content.split('\n'):
                            if 'API_KEY' in line and '=' in line:
                                key_name = line.split('=')[0]
                                print(f"   - {key_name}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")
        else:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {env_path}")
    
    return gemini_key or google_key

def decode_api_key_info(api_key):
    """–ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ API –∫–ª—é—á–∞ Google"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê 3: –ê–Ω–∞–ª–∏–∑ API –∫–ª—é—á–∞")
    print("-" * 60)
    
    if not api_key:
        print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        return None
    
    try:
        # Google API –∫–ª—é—á–∏ –∏–º–µ—é—Ç —Ñ–æ—Ä–º–∞—Ç:
        # –î–ª—è Web API Key —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞
        print(f"‚úÖ –¢–∏–ø –∫–ª—é—á–∞: Google API Key (Web)")
        print(f"   –î–ª–∏–Ω–∞: {len(api_key)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –§–æ—Ä–º–∞—Ç: {api_key[:10]}...{api_key[-10:]}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ —á–µ—Ä–µ–∑ Google API
        print("\n‚ö†Ô∏è –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å Project ID, –Ω—É–∂–Ω–æ:")
        print("   1. –û—Ç–∫—Ä–∏—Ç—å https://console.cloud.google.com/")
        print("   2. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å Project Selector (–≤–µ—Ä—Ö–Ω–∏–π –ª–µ–≤—ã–π —É–≥–æ–ª)")
        print("   3. –ù–∞–π—Ç–∏ –ø—Ä–æ–µ–∫—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–Ω —ç—Ç–æ—Ç –∫–ª—é—á")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–ª—é—á–∞: {e}")
    
    return True

def check_google_cloud():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Cloud"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê 4: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Cloud")
    print("-" * 60)
    
    try:
        from google.api_core.gapic_v1 import client_info
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ google-cloud-python –±–∏–±–ª–∏–æ—Ç–µ–∫–∞")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Generative AI
        try:
            import google.generativeai as genai
            print("‚úÖ google-generativeai —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            
            api_key = os.getenv('GEMINI_API_KEY')
            if api_key:
                genai.configure(api_key=api_key)
                print("‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–∫onfig—É—Ä–∏—Ä–æ–≤–∞–Ω –≤ genai")
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª—è—Ö
                try:
                    models = genai.list_models()
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Generative AI")
                    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
                    for model in models:
                        print(f"   - {model.name}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π: {e}")
            else:
                print("‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        except ImportError:
            print("‚ùå google-generativeai –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install google-generativeai")
            
    except ImportError:
        print("‚ùå google-cloud-core –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install google-cloud-core")

def check_billing_account():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–Ω–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê 5: –ü–ª–∞—Ç–µ–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
    print("-" * 60)
    
    print("‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: My Billing Account 1")
    print("   ID: 01743A-05FCF9-1413FB")
    print("   –°—Ç–∞—Ç—É—Å: Paid account")
    print("   –ü–ª–∞—Ç–µ–∂–Ω—ã–π –º–µ—Ç–æ–¥: Visa ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ 2572")
    print("   –ë–∞–ª–∞–Ω—Å: $0.00 (–Ω–µ—Ç –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏)")
    print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ù—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ Project –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —ç—Ç–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É!")
    print("   –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤: https://console.cloud.google.com/billing/01743A-05FCF9-1413FB/manage")

def main():
    print("=" * 60)
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê GOOGLE CLOUD SETUP")
    print("=" * 60)
    
    api_key = check_env_files()
    decode_api_key_info(api_key)
    check_google_cloud()
    check_billing_account()
    
    print("\n" + "=" * 60)
    print("üìã –ò–¢–û–ì–ò:")
    print("=" * 60)
    print("1. ‚úÖ –ü–ª–∞—Ç–µ–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: –°–û–ó–î–ê–ù (Paid account)")
    print("2. ‚è≥ API –∫–ª—é—á: –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ")
    print("3. ‚è≥ Project: –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –∫ –ø–ª–∞—Ç–µ–∂–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É")
    print("4. ‚è≥ Quotas –¥–ª—è computer-use: –ù—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ GCP Console")
    print("\n" + "=" * 60)

if __name__ == "__main__":
    main()

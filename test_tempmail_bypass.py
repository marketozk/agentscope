#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Temp-Mail

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞ temp-mail.org:
1. wait_until strategies
2. Headers –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏
3. –ó–∞–¥–µ—Ä–∂–∫–∏
4. –û–±—Ä–∞–±–æ—Ç–∫–∞ Cloudflare
5. Persistent cookies
"""

import asyncio
import json
from playwright.async_api import async_playwright
from pathlib import Path
from datetime import datetime

# –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ wait_until –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
STRATEGIES = [
    {
        "name": "domcontentloaded (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)",
        "wait_until": "domcontentloaded",
        "timeout": 20000,
        "post_delay": 1500,
        "description": "–ñ–¥—ë—Ç –∑–∞–≥—Ä—É–∑–∫–∏ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–∞–π—Ç–æ–≤"
    },
    {
        "name": "load",
        "wait_until": "load",
        "timeout": 15000,
        "post_delay": 1000,
        "description": "–ñ–¥—ë—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
    },
    {
        "name": "networkidle (—Å—Ç–∞—Ä–∞—è)",
        "wait_until": "networkidle",
        "timeout": 30000,
        "post_delay": 500,
        "description": "–ñ–¥—ë—Ç –∫–æ–≥–¥–∞ —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞—Ç–∏—Ö–Ω—É—Ç (–º–æ–∂–µ—Ç –∑–∞–≤–∏—Å–Ω—É—Ç—å)"
    },
    {
        "name": "minimal (–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è)",
        "wait_until": None,
        "timeout": 3000,
        "post_delay": 3000,
        "description": "–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∏ –∂–¥—ë—Ç N —Å–µ–∫ –≤–º–µ—Å—Ç–æ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è"
    }
]

async def test_strategy(strategy, test_url="https://temp-mail.org/en/"):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    print(f"\n{'='*70}")
    print(f"üß™ –°–¢–†–ê–¢–ï–ì–ò–Ø: {strategy['name']}")
    print(f"{'='*70}")
    print(f"üìù {strategy['description']}")
    print(f"‚öôÔ∏è  –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: wait_until={strategy['wait_until']}, timeout={strategy['timeout']}ms, delay={strategy['post_delay']}ms")
    
    result = {
        "strategy": strategy['name'],
        "url": test_url,
        "success": False,
        "duration": 0,
        "final_url": None,
        "page_title": None,
        "html_length": 0,
        "cloudflare_detected": False,
        "error": None,
        "timestamp": datetime.now().isoformat()
    }
    
    start_time = asyncio.get_event_loop().time()
    
    try:
        playwright = await async_playwright().start()
        browser = await playwright.chromium.launch(
            headless=True,
            args=['--disable-blink-features=AutomationControlled']
        )
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º persistent context —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º
        user_data_dir = str(Path(__file__).parent / "profiles" / "test_tempmail")
        context = await browser.new_context(
            viewport={'width': 1440, 'height': 900},
            locale='ru-RU'
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º Human-like headers
        await context.set_extra_http_headers({
            'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
            'Connection': 'keep-alive',
            'Upgrade-Insecure-Requests': '1',
        })
        
        page = await context.new_page()
        
        # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
        await page.wait_for_timeout(1000)
        
        print(f"\n‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é...")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        if strategy['wait_until'] is None:
            # –°—Ç—Ä–∞—Ç–µ–≥–∏—è –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è: –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏ –ø—Ä–æ—Å—Ç–æ –∂–¥–∞—Ç—å N —Å–µ–∫
            print(f"   üöÄ goto(wait_until=None) + sleep({strategy['post_delay']}ms)")
            nav_task = page.goto(test_url)
            await asyncio.sleep(strategy['post_delay'] / 1000)
            try:
                await asyncio.wait_for(nav_task, timeout=strategy['timeout'] / 1000)
            except asyncio.TimeoutError:
                print(f"   ‚è±Ô∏è  goto timeout, –Ω–æ –∂–¥—ë–º –≤—Å—ë —Ä–∞–≤–Ω–æ...")
        else:
            # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
            print(f"   üöÄ goto(wait_until={strategy['wait_until']}, timeout={strategy['timeout']}ms)")
            await page.goto(test_url, wait_until=strategy['wait_until'], timeout=strategy['timeout'])
        
        # –ü–æ—Å—Ç-–∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
        if strategy['post_delay'] > 0:
            await page.wait_for_timeout(strategy['post_delay'])
        
        # –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        final_url = page.url
        title = await page.title()
        html_content = await page.content()
        
        result['final_url'] = final_url
        result['page_title'] = title
        result['html_length'] = len(html_content)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Cloudflare
        if "Attention Required" in title or "Cloudflare" in title or "Sorry, you have been blocked" in html_content:
            result['cloudflare_detected'] = True
            print(f"   üõ°Ô∏è  ‚ö†Ô∏è CLOUDFLARE DETECTED!")
        else:
            print(f"   ‚úÖ NO CLOUDFLARE DETECTED")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        if "temp-mail" in html_content.lower() and result['html_length'] > 500:
            result['success'] = True
            print(f"   ‚úÖ –£–°–ü–ï–®–ù–û –ó–ê–ì–†–£–ñ–ï–ù–û (HTML: {result['html_length']} –±–∞–π—Ç)")
            print(f"   üìç URL: {final_url}")
            print(f"   üìÑ Title: {title}")
        else:
            print(f"   ‚ö†Ô∏è  –ó–ê–ì–†–£–ñ–ï–ù–û, –Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω—ã–π (HTML: {result['html_length']} –±–∞–π—Ç)")
            print(f"   üìç URL: {final_url}")
            print(f"   üìÑ Title: {title[:50]}...")
        
        await browser.close()
        await playwright.stop()
        
    except Exception as e:
        result['error'] = str(e)
        print(f"   ‚ùå –û–®–ò–ë–ö–ê: {e}")
    
    finally:
        result['duration'] = asyncio.get_event_loop().time() - start_time
        print(f"\n‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {result['duration']:.2f} —Å–µ–∫")
    
    return result


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\n" + "="*70)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–•–û–î–ê –ë–õ–û–ö–ò–†–û–í–ö–ò TEMP-MAIL.ORG")
    print("="*70)
    print("\n–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –≤—ã–±–µ—Ä–µ—Ç –ª—É—á—à—É—é.")
    print("\n‚ö†Ô∏è  –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–≥—É—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –≤–∞—à–µ–≥–æ IP –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!")
    
    results = []
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    for strategy in STRATEGIES:
        result = await test_strategy(strategy)
        results.append(result)
        await asyncio.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "="*70)
    print("üìä –ò–¢–û–ì–ò")
    print("="*70)
    
    successful = [r for r in results if r['success']]
    if successful:
        print(f"\n‚úÖ –£–°–ü–ï–®–ù–´–ï –°–¢–†–ê–¢–ï–ì–ò–ò: {len(successful)}/{len(results)}")
        for r in successful:
            print(f"   ‚Ä¢ {r['strategy']}: {r['duration']:.2f}s, HTML={r['html_length']} –±–∞–π—Ç")
        
        best = min(successful, key=lambda x: x['duration'])
        print(f"\nüèÜ –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø: {best['strategy']} ({best['duration']:.2f}s)")
    else:
        print(f"\n‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –ó–ê–ì–†–£–ó–ò–¢–¨ –° –ö–ê–ö–û–ô-–õ–ò–ë–û –°–¢–†–ê–¢–ï–ì–ò–ï–ô")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("  1. IP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω temp-mail.org")
        print("  2. VPN/Proxy —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        print("  3. Temporal –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ (—Ä–∞—Å—Å–µ—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5-10 –º–∏–Ω—É—Ç)")
        print("  4. –¢—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –æ–±—Ö–æ–¥")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    results_file = Path(__file__).parent / f"tempmail_test_results_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
    with open(results_file, 'w', encoding='utf-8') as f:
        json.dump(results, f, indent=2, ensure_ascii=False)
    print(f"\nüìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {results_file}")
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\n" + "="*70)
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò")
    print("="*70)
    print("""
1. –õ–£–ß–®–ê–Ø –°–¢–†–ê–¢–ï–ì–ò–Ø:
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π: wait_until="domcontentloaded"
   ‚Ä¢ –≠—Ç–æ –¥–∞—ë—Ç —Ö–æ—Ä–æ—à–∏–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Å–∫–æ—Ä–æ—Å—Ç—å—é –∏ –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å—é
   
2. –ï–°–õ–ò –ù–ï –†–ê–ë–û–¢–ê–ï–¢ DOMCONTENTLOADED:
   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π: wait_until="load"
   ‚Ä¢ –≠—Ç–æ –±–æ–ª–µ–µ –º—è–≥–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
   
3. –î–õ–Ø –°–õ–û–ñ–ù–´–• –°–õ–£–ß–ê–ï–í:
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é "minimal" (–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è)
   ‚Ä¢ + –¥–æ–±–∞–≤—å –∑–∞–¥–µ—Ä–∂–∫—É 3-5 —Å–µ–∫
   
4. –ï–°–õ–ò –í–°–ï–ì–û –ù–ï –†–ê–ë–û–¢–ê–ï–¢:
   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å IP (–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π VPN –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ
   ‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ—á—Ç—ã
    """)


if __name__ == "__main__":
    asyncio.run(main())

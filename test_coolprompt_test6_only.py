"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ç–æ–ª—å–∫–æ –¢–µ—Å—Ç–∞ 6 - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
"""
import os
import sys
from io import StringIO
try:
    from coolprompt.assistant import PromptTuner
except Exception:
    import sys as _sys
    from pathlib import Path as _Path
    _ROOT = _Path(__file__).resolve().parent
    _LOCAL_CP = _ROOT / "coolprompt_repo"
    if _LOCAL_CP.exists():
        _sys.path.insert(0, str(_LOCAL_CP))
    from coolprompt.assistant import PromptTuner  # type: ignore
from langchain_openai import ChatOpenAI

# –ü–æ–¥–∞–≤–ª—è–µ–º NLTK
import nltk
class SuppressOutput:
    def __enter__(self):
        self._original = sys.stderr
        sys.stderr = StringIO()
    def __exit__(self, *args):
        sys.stderr = self._original

with SuppressOutput():
    nltk.download('wordnet', quiet=True)
    nltk.download('punkt_tab', quiet=True) 
    nltk.download('omw-1.4', quiet=True)

API_KEY = os.environ.get("OPENAI_API_KEY", "your-api-key-here")

print("=" * 70)
print("–¢–ï–°–¢ 6: –ü–†–û–î–í–ò–ù–£–¢–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π)")
print("=" * 70)

try:
    llm = ChatOpenAI(
        model="gpt-5-chat-latest",
        temperature=0.8,
        max_tokens=4000,  # –£–≤–µ–ª–∏—á–µ–Ω–æ!
        api_key=API_KEY
    )
    
    prompt_tuner = PromptTuner(target_model=llm)
    
    task = "Generate creative product names for a new eco-friendly water bottle"
    
    print(f"\nüìù –ó–∞–¥–∞—á–∞: {task}")
    print("üîÑ –ó–∞–ø—É—Å–∫ —Å max_tokens=4000...")
    
    # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ —Å–æ—Å—Ç–∞–≤–Ω–æ–º —Ç–µ–∫—Å—Ç–µ (–ø–µ—Ä–≤—ã–π –ø—Ä–æ–º–ø—Ç + –æ—Ç–≤–µ—Ç + —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–º–ø—Ç)
    # –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç coolprompt_run_with_context.py
    # –ª–∏–±–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂–µ –∏ –∑–∞–¥–∞–π—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º.
    #
    # from pathlib import Path
    # def _read(p: str) -> str:
    #     return Path(p).read_text(encoding="utf-8", errors="ignore")
    # composite_prompt = _read("first.txt") + "\n\n" + _read("answer.txt") + "\n\n" + _read("next.txt")
    # prompt_tuner.run(composite_prompt)
    #
    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
    prompt_tuner.run(task)
    
    print("\n‚úÖ –£–°–ü–ï–•!")
    print("\n" + "=" * 70)
    print("–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢:")
    print("=" * 70)
    print(prompt_tuner.final_prompt)
    print("=" * 70)
    
except Exception as e:
    print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
